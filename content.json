{"meta":{"title":"IO Man's Wiki","subtitle":"","description":"","author":"Hu Pan","url":"http://ioman.top","root":"/"},"pages":[{"title":"关于我","date":"2020-08-18T15:13:26.636Z","updated":"2020-08-11T15:02:31.090Z","comments":true,"path":"about/index.html","permalink":"http://ioman.top/about/index.html","excerpt":"","text":"胡畔，20014年毕业于东南大学，电子科学与技术专业。先后从事过硬件、嵌入式软件、服务器后端开发，主要使用C和Java语言。目前一直从事物联网行业相关的技术开发工作。"},{"title":"Categories","date":"2020-08-08T13:42:07.689Z","updated":"2020-08-08T13:42:07.689Z","comments":true,"path":"categories/index.html","permalink":"http://ioman.top/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2020-08-08T13:42:07.705Z","updated":"2020-08-08T13:42:07.705Z","comments":true,"path":"tags/index.html","permalink":"http://ioman.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Guava本地缓存","slug":"Database/本地缓存/Guava本地缓存","date":"2020-08-23T03:27:06.271Z","updated":"2020-08-23T03:12:22.040Z","comments":true,"path":"2020/08/23/Database/本地缓存/Guava本地缓存/","link":"","permalink":"http://ioman.top/2020/08/23/Database/%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98/Guava%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98/","excerpt":"","text":"Cache、LoadingCache学习资料： https://segmentfault.com/a/1190000011105644 https://www.orchome.com/1268","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"本地缓存","slug":"Database/本地缓存","permalink":"http://ioman.top/categories/Database/%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98/"}],"tags":[]},{"title":"事务","slug":"Database/基础知识/事务","date":"2020-08-23T03:27:06.267Z","updated":"2020-08-23T03:21:47.488Z","comments":true,"path":"2020/08/23/Database/基础知识/事务/","link":"","permalink":"http://ioman.top/2020/08/23/Database/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%8B%E5%8A%A1/","excerpt":"","text":"事务的四大特征如果一个数据库声称支持事务的操作，那么该数据库必须要具备以下四个特性： 1 原子性(Atomicity)原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚，这和前面两篇博客介绍事务的功能是一样的概念，因此事务的操作如果成功就必须要完全应用到数据库，如果操作失败则不能对数据库有任何影响。 2 一致性(Consistency)一致性是指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态。 拿转账来说，假设用户A和用户B两者的钱加起来一共是5000，那么不管A和B之间如何转账，转几次账，事务结束后两个用户的钱相加起来应该还得是5000，这就是事务的一致性。 3 隔离性(Isolation)隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。 即要达到这么一种效果：对于任意两个并发的事务T1和T2，在事务T1看来，T2要么在T1开始之前就已经结束，要么在T1结束之后才开始，这样每个事务都感觉不到有其他事务在并发地执行。 关于事务的隔离性数据库提供了多种隔离级别。 4 持久性(Durability)持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。 例如我们在使用JDBC操作数据库时，在提交事务方法后，提示用户事务操作完成，当我们程序执行完成直到看到提示后，就可以认定事务以及正确提交，即使这时候数据库出现了问题，也必须要将我们的事务完全执行完成，否则就会造成我们看到提示事务处理完毕，但是数据库因为故障而没有执行事务的重大错误。 产生的问题1. 脏读脏读是指在一个事务处理过程里读取了另一个未提交的事务中的数据。 当一个事务正在多次修改某个数据，而在这个事务中这多次的修改都还未提交，这时一个并发的事务来访问该数据，就会造成两个事务得到的数据不一致。例如：用户A向用户B转账100元，对应SQL命令如下 123update account set money&#x3D;money+100 where name&#x3D;’B’; (此时A通知B)update account set money&#x3D;money - 100 where name&#x3D;’A’; 当只执行第一条SQL时，A通知B查看账户，B发现确实钱已到账（此时即发生了脏读），而之后无论第二条SQL是否执行，只要该事务不提交，则所有操作都将回滚，那么当B以后再次查看账户时就会发现钱其实并没有转。 2. 不可重复读不可重复读是指在对于数据库中的某个数据，一个事务范围内多次查询却返回了不同的数据值，这是由于在查询间隔，被另一个事务修改并提交了。 例如事务T1在读取某一数据，而事务T2立马修改了这个数据并且提交事务给数据库，事务T1再次读取该数据就得到了不同的结果，发送了不可重复读。 不可重复读和脏读的区别是，脏读是某一事务读取了另一个事务未提交的脏数据，而不可重复读则是读取了前一事务提交的数据。 在某些情况下，不可重复读并不是问题，比如我们多次查询某个数据当然以最后查询得到的结果为主。但在另一些情况下就有可能发生问题，例如对于同一个数据A和B依次查询就可能不同，A和B就可能打起来了…… 3. 虚读(幻读)幻读是事务非独立执行时发生的一种现象。例如事务T1对一个表中所有的行的某个数据项做了从“1”修改为“2”的操作，这时事务T2又对这个表中插入了一行数据项，而这个数据项的数值还是为“1”并且提交给数据库。而操作事务T1的用户如果再查看刚刚修改的数据，会发现还有一行没有修改，其实这行是从事务T2中添加的，就好像产生幻觉一样，这就是发生了幻读。 幻读和不可重复读都是读取了另一条已经提交的事务（这点就脏读不同），所不同的是不可重复读查询的都是同一个数据项，而幻读针对的是一批数据整体（比如数据的个数）。 MySQL数据库四种隔离级别1. Serializable (串行化)：可避免脏读、不可重复读、幻读的发生。 2. Repeatable read (可重复读)：可避免脏读、不可重复读的发生。 3. Read committed (读已提交)：可避免脏读的发生。 4. Read uncommitted (读未提交)：最低级别，任何情况都无法保证。 参考资料： https://www.cnblogs.com/fjdingsd/p/5273008.html","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"基础知识","slug":"Database/基础知识","permalink":"http://ioman.top/categories/Database/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[]},{"title":"配置文件","slug":"Database/Redis/配置文件","date":"2020-08-23T03:27:06.263Z","updated":"2020-08-23T03:21:11.965Z","comments":true,"path":"2020/08/23/Database/Redis/配置文件/","link":"","permalink":"http://ioman.top/2020/08/23/Database/Redis/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","excerpt":"","text":"配置文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322# Redis 配置文件示例## Redis 启动是必须把配置文件路径作为启动的第一个参数:# .&#x2F;redis-server &#x2F;path&#x2F;to&#x2F;redis.conf# Note on units: when memory size is needed, it is possible to specify# it in the usual form of 1k 5GB 4M and so forth:## 1k &#x3D;&gt; 1000 bytes# 1kb &#x3D;&gt; 1024 bytes# 1m &#x3D;&gt; 1000000 bytes# 1mb &#x3D;&gt; 1024*1024 bytes# 1g &#x3D;&gt; 1000000000 bytes# 1gb &#x3D;&gt; 1024*1024*1024 bytes## units are case insensitive so 1GB 1Gb 1gB are all the same.################################## INCLUDES #################################### 这里可以包含其它外部配置文件## 包含的配置文件不会被 &quot;CONFIG REWRITE&quot; 命令写# 如果要覆盖这里的配置，include要在这个文件的最后用## include &#x2F;path&#x2F;to&#x2F;local.conf# include &#x2F;path&#x2F;to&#x2F;other.conf################################## 网络相关 ###################################### 绑定允许访问的ip# Examples:## bind 192.168.1.100 10.0.0.1# bind 127.0.0.1 ::1# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#bind 127.0.0.1# 是否开启保护模式protected-mode no# 连接的端口号，默认是 6379port 6379# TCP listen() backlog. 进程还没有accept的tcp最大连接数tcp-backlog 511# Unix socket 路径 ？# unixsocket &#x2F;tmp&#x2F;redis.sock# unixsocketperm 700# 客户端空闲多久后关闭连接timeout 0# TCP keepalive.tcp-keepalive 300################################# GENERAL ###################################### 是否作为守护进程在后台运行# Redis will write a pid file in &#x2F;var&#x2F;run&#x2F;redis.pid when daemonized.daemonize yes# 监督# supervised no - no supervision interaction# supervised upstart - signal upstart by putting Redis into SIGSTOP mode# supervised systemd - signal systemd by writing READY&#x3D;1 to $NOTIFY_SOCKET# supervised auto - detect upstart or systemd method based onsupervised no# pidfile 的位置pidfile &#x2F;tmp&#x2F;redis_6379.pid# 日志级别# debug、verbose、notice、warning loglevel notice# 日志文件位置logfile &quot;&#x2F;tmp&#x2F;redis_6379.log&quot;# 系统日志# syslog-enabled no# 系统日志？# syslog-ident redis# 系统日志？# syslog-facility local0# 数据库数量databases 16################################ 快照 ################################## 存盘策略:## save &lt;seconds&gt; &lt;changes&gt;# In the example below the behaviour will be to save:# after 900 sec (15 min) if at least 1 key changed# 可以禁用任何策略通过写：# save &quot;&quot;save 900 1save 300 10save 60 10000# 默认如果开启了存盘策略且存盘失败了，会禁止写stop-writes-on-bgsave-error yes# 存盘时是否压缩，不压缩可以节省cpu资源但浪费存储空间rdbcompression yes# 存盘是否检验rdbchecksum yes# 存盘文件名称dbfilename dump.rdb# 工作路径dir &quot;&#x2F;codis&quot;################################# 主从同步 ################################## 作为slave# slaveof &lt;masterip&gt; &lt;masterport&gt;# 主密码# masterauth &lt;master-password&gt;# ???slave-serve-stale-data yes# slave-read-only yes# Replication SYNC strategy: disk or socket.repl-diskless-sync no# repl-diskless-sync-delay 5# Slaves ping master 时间间隔# repl-ping-slave-period 10# # repl-timeout 60# repl-disable-tcp-nodelay no# # repl-backlog-size 1mb# # repl-backlog-ttl 3600# slave-priority 100# # min-slaves-to-write 3# min-slaves-max-lag 10# # slave-announce-ip 5.5.5.5# slave-announce-port 1234################################## 安全 #################################### 设置访问密码# requirepass foobared# 将敏感命令重命名# rename-command CONFIG &quot;&quot;################################### 限制 ##################################### 最大客户端数量# maxclients 10000# 最大内存使用# maxmemory &lt;bytes&gt;# 达到最大内存时的处理策略# volatile-lru -&gt; remove the key with an expire set using an LRU algorithm# allkeys-lru -&gt; remove any key according to the LRU algorithm# volatile-random -&gt; remove a random key with an expire set# allkeys-random -&gt; remove a random key, any key# volatile-ttl -&gt; remove the key with the nearest expire time (minor TTL)# noeviction -&gt; do not expire at all, just return an error on write operations# 默认:# maxmemory-policy noeviction# ????# maxmemory-samples 5############################## APPEND ONLY MODE ################################ AOF and RDB 持久化策略可以同时开启# AOF 使能时， redis启动时会载入AOFappendonly no# AOF文件名appendfilename &quot;appendonly.aof&quot;# 同步刷盘策略# appendfsync alwaysappendfsync everysec# appendfsync no# no-appendfsync-on-rewrite no# auto-aof-rewrite-percentage 100auto-aof-rewrite-min-size 64mb# aof-load-truncated yes################################ LUA 脚本 ################################ Max execution time of a Lua script in millisecondslua-time-limit 5000################################ REDIS 集群 ################################# cluster-enabled yes## cluster-config-file nodes-6379.conf## cluster-node-timeout 15000## cluster-slave-validity-factor 10## cluster-migration-barrier 1## cluster-require-full-coverage yes################################## SLOW LOG #################################### slowlog-log-slower-than 10000# slowlog-max-len 128################################ LATENCY MONITOR ############################### latency-monitor-threshold 0############################# EVENT NOTIFICATION ################################ K Keyspace events, published with __keyspace@&lt;db&gt;__ prefix.# E Keyevent events, published with __keyevent@&lt;db&gt;__ prefix.# g Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...# $ String commands# l List commands# s Set commands# h Hash commands# z Sorted set commands# x Expired events (events generated every time a key expires)# e Evicted events (events generated when a key is evicted for maxmemory)# A Alias for g$lshzxe, so that the &quot;AKE&quot; string means all the events.#notify-keyspace-events &quot;&quot;############################### ADVANCED CONFIG ################################ hash-max-ziplist-entries 512hash-max-ziplist-value 64# # -5: max size: 64 Kb &lt;-- not recommended for normal workloads# -4: max size: 32 Kb &lt;-- not recommended# -3: max size: 16 Kb &lt;-- probably not recommended# -2: max size: 8 Kb &lt;-- good# -1: max size: 4 Kb &lt;-- goodlist-max-ziplist-size -2# # 0: disable all list compression# 1: depth 1 means &quot;don&#39;t start compressing until after 1 node into the list,# going from either the head or tail&quot;# So: [head]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[tail]# [head], [tail] will always be uncompressed; inner nodes will compress.# 2: [head]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[tail]# 2 here means: don&#39;t compress head or head-&gt;next or tail-&gt;prev or tail,# but compress all nodes between them.# 3: [head]-&gt;[next]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[prev]-&gt;[tail]list-compress-depth 0# set-max-intset-entries 512# zset-max-ziplist-entries 128zset-max-ziplist-value 64# hll-sparse-max-bytes 3000# activerehashing yes# client-output-buffer-limit normal 0 0 0client-output-buffer-limit slave 256mb 64mb 60client-output-buffer-limit pubsub 32mb 8mb 60# hz 10# aof-rewrite-incremental-fsync yes","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"Redis","slug":"Database/Redis","permalink":"http://ioman.top/categories/Database/Redis/"}],"tags":[]},{"title":"策略和实现机制","slug":"Database/Redis/策略和实现机制","date":"2020-08-23T03:27:06.261Z","updated":"2020-08-23T03:20:51.539Z","comments":true,"path":"2020/08/23/Database/Redis/策略和实现机制/","link":"","permalink":"http://ioman.top/2020/08/23/Database/Redis/%E7%AD%96%E7%95%A5%E5%92%8C%E5%AE%9E%E7%8E%B0%E6%9C%BA%E5%88%B6/","excerpt":"","text":"数据过期策略参考： https://www.cnblogs.com/chenpingzhao/p/5022467.html 集群集群的几种实现方式 客户端分片：根据业务hash 基于代理的分片：Twemproxy、codis 路由查询：Redis-cluster","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"Redis","slug":"Database/Redis","permalink":"http://ioman.top/categories/Database/Redis/"}],"tags":[]},{"title":"安装部署","slug":"Database/Redis/安装部署","date":"2020-08-23T03:27:06.259Z","updated":"2020-08-23T03:20:24.566Z","comments":true,"path":"2020/08/23/Database/Redis/安装部署/","link":"","permalink":"http://ioman.top/2020/08/23/Database/Redis/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/","excerpt":"","text":"docker单点Redis 集群搭建和使用Codis 搭建和使用","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"Redis","slug":"Database/Redis","permalink":"http://ioman.top/categories/Database/Redis/"}],"tags":[]},{"title":"Redis命令","slug":"Database/Redis/Redis命令","date":"2020-08-23T03:27:06.258Z","updated":"2020-08-23T03:20:05.670Z","comments":true,"path":"2020/08/23/Database/Redis/Redis命令/","link":"","permalink":"http://ioman.top/2020/08/23/Database/Redis/Redis%E5%91%BD%E4%BB%A4/","excerpt":"","text":"在线命令参考redisdoc.com连接1redis-cli -a 密码 切换数据库1select [number] 清空数据 清空所有库所有key1flushall 清空单个库所有key1flushdb","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"Redis","slug":"Database/Redis","permalink":"http://ioman.top/categories/Database/Redis/"}],"tags":[]},{"title":"安装部署","slug":"Database/Postgre/安装部署","date":"2020-08-23T03:27:06.254Z","updated":"2020-08-23T03:19:01.957Z","comments":true,"path":"2020/08/23/Database/Postgre/安装部署/","link":"","permalink":"http://ioman.top/2020/08/23/Database/Postgre/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/","excerpt":"","text":"Docker部署12345docker run -d --name postgres --restart always \\ -e POSTGRES_USER&#x3D;root \\ -e POSTGRES_PASSWORD&#x3D;root \\ -p 5432:5432 \\ postgres:9.6.8 客户端工具pgadmin","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"Postgre","slug":"Database/Postgre","permalink":"http://ioman.top/categories/Database/Postgre/"}],"tags":[]},{"title":"操作命令","slug":"Database/Postgre/操作命令","date":"2020-08-23T03:27:06.254Z","updated":"2020-08-23T03:19:37.268Z","comments":true,"path":"2020/08/23/Database/Postgre/操作命令/","link":"","permalink":"http://ioman.top/2020/08/23/Database/Postgre/%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/","excerpt":"","text":"客户端命令登录： 1psql 创建数据库： 1CREATE DATABASE test OWNER root; 查看所有数据库： 1\\l 查看所有数据库（包括详细参数）： 1select * from pg_database; 选择数据库： 1\\c databasename 查看所有表： 1\\dt schema_name.* 查看某个表的结构： 1\\d schema_name.tablename 退出psql控制台： 1\\q","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"Postgre","slug":"Database/Postgre","permalink":"http://ioman.top/categories/Database/Postgre/"}],"tags":[]},{"title":"管理","slug":"Database/MySQL/管理","date":"2020-08-23T03:27:06.250Z","updated":"2020-08-23T03:17:46.920Z","comments":true,"path":"2020/08/23/Database/MySQL/管理/","link":"","permalink":"http://ioman.top/2020/08/23/Database/MySQL/%E7%AE%A1%E7%90%86/","excerpt":"","text":"查看和修改最大连接数 root 登录 use mysql; show variables like ‘max_connections’; set global max_connections=1000; 查看数据库文件存储位置1show global variables like &quot;%datadir%&quot;; 查看和修改编码查看 1show variables like &#39;char%&#39;; 修改(退出后会恢复到原来的) 1set character_set_results&#x3D;gb2312; 查看当前连接的客户端1SELECT substring_index(host, &#39;:&#39;,1) AS host_name,state,count(*) FROM information_schema.processlist GROUP BY state,host_name; 用户和授权https://www.cnblogs.com/sos-blue/p/6852945.html","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"MySQL","slug":"Database/MySQL","permalink":"http://ioman.top/categories/Database/MySQL/"}],"tags":[]},{"title":"操作命令","slug":"Database/MySQL/操作命令","date":"2020-08-23T03:27:06.249Z","updated":"2020-08-23T03:12:44.794Z","comments":true,"path":"2020/08/23/Database/MySQL/操作命令/","link":"","permalink":"http://ioman.top/2020/08/23/Database/MySQL/%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/","excerpt":"","text":"查看数据库1show databases; 查询表的详细信息1DESC t_box_channel 1SHOW FULL COLUMNS FROM t_box_channel 1SHOW CREATE TABLE t_msg_log 没有则插入，有则更新 关键词: ON DUPLICATE KEY UPDATE 判断有没有的那个字段需要加上唯一性约束 没有则执行前面的insert语句，有则执行后面的update语句1INSERT INTO t_vehicle_extend values(default, ?, 1, now(), now()) ON DUPLICATE KEY UPDATE has_onstar=1 自定义查询结果列名1select SUBSTR(Version2 FROM 1 FOR 3) main_version, SUBSTR(Version1 FROM 4 FOR 1) sub_version, FilePath, FileSize from t_programfile where FileFlag&#x3D;0 limit 10 查看执行计划1explain select sum(energy_value) from device_energy_interval where dsn &#x3D; &#39;AC000W006538474&#39;; 导出数据导出数据库用mysqldump命令（此命令的路径，在mysql的安装路径） 导出数据和表结构 12# mysqldump -u用户名 -p(密码) 数据库名 &gt; 数据库名.sql&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysqldump -uroot -p abc &gt; abc.sql 只导出表结构 12# mysqldump -u用户名 -p密码 -d 数据库名 &gt; 数据库名.sql&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysqldump -uroot -p -d abc &gt; abc.sql 导入数据首先建空数据库 1create database abc; 导入方法一： 12345678# 选择数据库use abc;# 设置数据库编码set names utf8;# 导入数据（注意sql文件的路径）source &#x2F;home&#x2F;abc&#x2F;abc.sql; 导入方法二： 12# mysql -u用户名 -p(密码) 数据库名 &lt; 数据库名.sqlmysql -uroot -p abc &lt; abc.sql","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"MySQL","slug":"Database/MySQL","permalink":"http://ioman.top/categories/Database/MySQL/"}],"tags":[]},{"title":"安装配置","slug":"Database/MySQL/安装配置","date":"2020-08-23T03:27:06.247Z","updated":"2020-08-23T03:15:02.754Z","comments":true,"path":"2020/08/23/Database/MySQL/安装配置/","link":"","permalink":"http://ioman.top/2020/08/23/Database/MySQL/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/","excerpt":"","text":"普通安装参考 http://www.centoscn.com/mysql/2014/1211/4290.html 12yum install mysql-server yum install mysql-devel 启动 1service mysqld start 设置开机启动 12chkconfig --list | grep mysqldchkconfig mysqld on 为root设置密码 1&#x2F;usr&#x2F;bin&#x2F;mysqladmin -u root password &#39;new-password&#39; 设置外部端口访问 12GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;youpassword&#39; WITH GRANT OPTION;FLUSH PRIVILEGES; 关闭防火墙 1service iptables stop 创建用户，设置权限 12CREATE USER yy IDENTIFIED BY &#39;123&#39;;grant select,insert,update,delete on *.* to test1@&quot;%&quot; Identified by &quot;abc&quot;; MySQL软连接 1ln -s &#x2F;usr&#x2F;lib64&#x2F;mysql&#x2F;libmysqlclient_r.so &#x2F;usr&#x2F;lib64&#x2F;libmysqlclient_r.so","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"MySQL","slug":"Database/MySQL","permalink":"http://ioman.top/categories/Database/MySQL/"}],"tags":[]},{"title":"安装和管理","slug":"Database/MongoDB/安装和配置","date":"2020-08-23T03:27:06.244Z","updated":"2020-08-23T03:12:44.817Z","comments":true,"path":"2020/08/23/Database/MongoDB/安装和配置/","link":"","permalink":"http://ioman.top/2020/08/23/Database/MongoDB/%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/","excerpt":"","text":"docker单点部署docker 12345docker run -d --restart always --name mongo \\ -p 27017:27017 \\ -e MONGO_INITDB_ROOT_USERNAME&#x3D;root \\ -e MONGO_INITDB_ROOT_PASSWORD&#x3D;root \\ mongo:4.1.13 使用管理员账号登录 1234mongo --port 27017 -u &quot;root&quot; -p &quot;root&quot; --authenticationDatabase &quot;admin&quot;&#x2F;&#x2F; 等效mongo localhost:27017&#x2F;admin -u root -p 创建新库并创建用户 1234567891011121314&#x2F;&#x2F; 切换数据库，没有则创建use mydb&#x2F;&#x2F; 在切换到的数据库下创建用户db.createUser( &#123; user: &quot;sunsea&quot;, pwd: &quot;123456&quot;, roles: [&quot;readWrite&quot;] &#125; )&#x2F;&#x2F; 在相应数据库下查看用户db.getUsers() 查看用户下的数据库 1show dbs","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"MongoDB","slug":"Database/MongoDB","permalink":"http://ioman.top/categories/Database/MongoDB/"}],"tags":[]},{"title":"HBase数据库操作","slug":"Database/HBase/数据库操作","date":"2020-08-23T03:27:06.240Z","updated":"2020-08-23T03:15:55.150Z","comments":true,"path":"2020/08/23/Database/HBase/数据库操作/","link":"","permalink":"http://ioman.top/2020/08/23/Database/HBase/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/","excerpt":"","text":"在线学习 http://www.th7.cn/db/nosql/201511/144465.shtml 退格操作需要用 ctrl+退格退格操作需要用 ctrl+退格 新建表(表名+列族名)1create &#39;t_source_warning&#39;, &#39;fd&#39;,&#39;fw&#39; 删除某一行1deleteall &#39;表名&#39;,&#39;key&#39; 扫描1234567scan &#39;VehicleData&#39;,&#123;STARTROW&#x3D;&gt;&#39;LSGGF53W4BH313183_14990&#39;,LIMIT&#x3D;&gt;10,COLUMNS&#x3D;&gt;[&#39;f:analysisResult&#39;,&#39;f:_warningList_1&#39;],REVERSED&#x3D;&gt;true&#125;scan &#39;RawData&#39;,&#123;LIMIT&#x3D;&gt;10&#125;scan &#39;RawData&#39;,&#123;STARTROW&#x3D;&gt;&#39;LGBF5AE05DR000001_1499673950&#39;,STOPROW&#x3D;&gt;&#39;LGBF5AE05DR000001_1499674950&#39;&#125;REVERSED&#x3D;&gt;true (倒序排) 查看有几个列族1desc &#39;表名&#39; 根据key获取数据1get &#39;WarningData&#39;,&#39;LSGPC52U6DF087137_1500003257221&#39; 扫描某些字段1COLUMNS&#x3D;&gt;[&#39;f:analysisResult&#39;,&#39;f:_warningList_1&#39;,&#39;f:_warningList_2&#39;,&#39;f:_warningList_3&#39;,&#39;f:_reminderList_1&#39;] 扫描结果中过滤某些字段1234scan &#39;test_row_key&#39;, &#123;FILTER &#x3D;&gt; &quot;(SingleColumnValueFilter(&#39;cf&#39;, &#39;TIME_ID&#39;, &#x3D;, &#39;binary:201206&#39;))&quot; &#125;scan &#39;VehicleData&#39;, &#123;STARTROW&#x3D;&gt;&#39;LGBF5AE05DR000001_1502380800000&#39;,LIMIT&#x3D;&gt;10,REVERSED&#x3D;&gt;true,FILTER &#x3D;&gt; &quot;(SingleColumnValueFilter(&#39;f&#39;, &#39;tboxNumber&#39;, &#x3D;, &#39;binary:SF53KJNS8KH31833&#39;))&quot; &#125;","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"HBase","slug":"Database/HBase","permalink":"http://ioman.top/categories/Database/HBase/"}],"tags":[]},{"title":"操作命令","slug":"Database/Cassandra/操作命令","date":"2020-08-23T03:27:06.236Z","updated":"2020-08-23T03:12:44.846Z","comments":true,"path":"2020/08/23/Database/Cassandra/操作命令/","link":"","permalink":"http://ioman.top/2020/08/23/Database/Cassandra/%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/","excerpt":"","text":"学习资料https://www.w3cschool.cn/cassandra/ CQLSH 命令登录 1cqlsh -u &#39;user&#39; -p &#39;password&#39; 查看表空间(相当于库) 12describe keyspaces;use mykey; 查看已有表和表结构 12describe tables;describe table table_name; 创建和删除表、二级索引、物化视图 123&#96;&#96;&#96;清空表中数据 truncate 12导入和导出数据 COPY table_name ( column, …)FROM ( ‘file_name’ | STDIN )WITH option = ‘value’ AND … COPY table_name ( column , … )TO ( ‘file_name’ | STDOUT )WITH option = ‘value’ AND … // 示例COPY device FROM ‘/home/hupan/device70w.csv’; 123#### 集群命令 - docker内查看集群节点数 nodetool status","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"Cassandra","slug":"Database/Cassandra","permalink":"http://ioman.top/categories/Database/Cassandra/"}],"tags":[]},{"title":"安装部署","slug":"Database/Cassandra/安装部署","date":"2020-08-23T03:27:06.234Z","updated":"2020-08-23T03:14:32.183Z","comments":true,"path":"2020/08/23/Database/Cassandra/安装部署/","link":"","permalink":"http://ioman.top/2020/08/23/Database/Cassandra/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/","excerpt":"","text":"Docker部署 单点1docker run --name cassandra-server -d -e CASSANDRA_BROADCAST_ADDRESS&#x3D;192.168.8.129 -p 9042:9042 -p 7000:7000 cassandra:latest 集群 12345docker run --name cassandra_node1 -d -v /var/docker-volume/cassandra:/var/lib/cassandra -e CASSANDRA_CLUSTER_NAME=&quot;dev_cassandra_cluster&quot; -e CASSANDRA_BROADCAST_ADDRESS=192.168.8.108 -p 7000:7000 -p 9160:9160 -p 9042:9042 docker.sunseaiot.cn/cassandra:3.11.2_authdocker run --name cassandra_node2 -d -v /var/docker-volume/cassandra:/var/lib/cassandra -e CASSANDRA_CLUSTER_NAME=&quot;dev_cassandra_cluster&quot; -e CASSANDRA_BROADCAST_ADDRESS=192.168.8.109 -e CASSANDRA_SEEDS=192.168.8.108 -p 7000:7000 -p 9160:9160 -p 9042:9042 docker.sunseaiot.cn/cassandra:3.11.2_authdocker run --name cassandra_node3 -d -v /var/docker-volume/cassandra:/var/lib/cassandra -e CASSANDRA_CLUSTER_NAME=&quot;dev_cassandra_cluster&quot; -e CASSANDRA_BROADCAST_ADDRESS=192.168.8.110 -e CASSANDRA_SEEDS=192.168.8.108 -p 7000:7000 -p 9160:9160 -p 9042:9042 docker.sunseaiot.cn/cassandra:3.11.2_auth 集群搭好后，可用默认的超级用户Cassandra（密码cassandra）登陆 1cqlsh 192.168.8.108 -u cassandra -p cassandra 然后提升system_authkeyspace的复制因子（通常为节点数） 1ALTER KEYSPACE system_auth WITH replication &#x3D; &#123;&#39;class&#39;: &#39;SimpleStrategy&#39;, &#39;replication_factor&#39;: 3&#125;; 创建一个新的超级用户替代默认的超级用户cassandra（密码cassandra） 1CREATE USER sunseaiot WITH PASSWORD &#39;sunseaiot&#39; SUPERUSER ; 最后切换用户登陆，删除默认超级用户 1DROP USER cassandra; 系统调优 写库过快时，会报错 Maximum memory usage reached (1.000GiB), cannot allocate chunk of 1.000MiB1234567# 调整cassandra配置文件里下面这两个参数# 应该是从内存到落盘的周期之类的，默认60分钟index_summary_resize_interval_in_minutes: 20# 缓存大小之类的，默认是四分之一堆内存和512M的较小值file_cache_size_in_mb: 8196","categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"Cassandra","slug":"Database/Cassandra","permalink":"http://ioman.top/categories/Database/Cassandra/"}],"tags":[]},{"title":"","slug":"学习资料","date":"2020-08-16T01:10:19.564Z","updated":"2018-06-13T13:49:27.180Z","comments":true,"path":"2020/08/16/学习资料/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/","excerpt":"","text":"JAVA(https://ke.qq.com/course/272077https://item.jd.com/12037418.html) Linux( 运维整理一个PPT，介绍基本的一些使用 ？ https://item.jd.com/10064429.htmlhttps://ke.qq.com/course/261163) Git（https://ke.qq.com/course/223597http://git.oschina.net/progit/） 面向对象和设计模式(https://item.jd.com/10100236.html https://item.jd.com/10078483.html 《深入浅出面向对象设计与分析》 http://www.java1234.com/a/javabook/javabase/2017/0404/7878.html) Maven(https://ke.qq.com/course/265931) 3213740@a","categories":[],"tags":[]},{"title":"","slug":"树莓派资料","date":"2020-08-16T01:10:19.564Z","updated":"2018-06-13T13:49:28.648Z","comments":true,"path":"2020/08/16/树莓派资料/","link":"","permalink":"http://ioman.top/2020/08/16/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B5%84%E6%96%99/","excerpt":"","text":"系统软件大全链接： https://pan.baidu.com/s/1wUz4LbbZZ_eSGBk4boyBtA 密码：awa1 sd格式化软件链接： https://pan.baidu.com/s/1hT7yE_CK_5mJWuNVpNb_cw 密码：elhr 烧录系统使用的软件链接： https://pan.baidu.com/s/1lrPSBhOQk68g07qwDePtuw 密码：4h4z IP地址扫描链接： https://pan.baidu.com/s/1kno8EOyl40fxticjB81BEw 密码：2yeu raspbian系统及其安装教程链接： https://pan.baidu.com/s/1uupKTf1QhgqRieWih6bANA 密码：mou6 ubuntu系统及其安装教程链接： https://pan.baidu.com/s/1-A7fZNehyEqcDFGx9dHiHA 密码：auph 树莓派安装视频教程： http://pan.baidu.com/s/1jHEZl10 技术讨论群：RPi树莓派技术全国总群 498021441 远程使用的 账户名：pi 密码：raspberry 树莓派3自编手册： http://pan.baidu.com/s/1mhDWoCo 说明书链接： http://pan.baidu.com/s/1jHVYzOE 密码：936c","categories":[],"tags":[]},{"title":"","slug":"硬件/蜂窝模组/移远NB-IOT模组","date":"2020-08-16T01:10:19.548Z","updated":"2018-06-13T13:49:27.726Z","comments":true,"path":"2020/08/16/硬件/蜂窝模组/移远NB-IOT模组/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E8%9C%82%E7%AA%9D%E6%A8%A1%E7%BB%84/%E7%A7%BB%E8%BF%9CNB-IOT%E6%A8%A1%E7%BB%84/","excerpt":"","text":"移动卡 必要指令测试 测试 1AT 使能网络附着 1AT+CEREG&#x3D;1 查询信号质量 12&#x2F;&#x2F; 如果结果为 +CSQ:99,99 代表无信号 下面的步骤会出问题AT+CSQ 激活上下文 1AT+CGATT&#x3D;1 查询上下文状态 12&#x2F;&#x2F; 回复+CGATT:1才行，否则检查信号质量AT+CSQ，然后重复上面的步骤AT+CGATT? 创建UDP服务 12&#x2F;&#x2F; DGRAM是固定写法，17代表UDP，3005是端口号，1代表接收消息AT+NSOCR&#x3D;DGRAM,17,3005,1 UDP发送数据 123&#x2F;&#x2F; 0代表通道0，123.57.41.13是远程地址，10006是远程端口，11是发送数据长度，48454c4c4f204e42494f54是发送数据16进制字符串&#x2F;&#x2F; 通道要选择上面创建UDF服务返回的通道AT+NSOST&#x3D;0,139.199.209.220,10088,11,48454c4c4f204e42493032 UDP接收数据 123&#x2F;&#x2F; 模组收到数据会显示 NSONMI:1,7 1代表通道，7代表收到的数据长度&#x2F;&#x2F; 读取指令0代表通道，3代表读取的数据长度AT+NSORF&#x3D;0,3 关闭socket连接 12&#x2F;&#x2F; 1代表通道编号AT+NSOCL&#x3D;1","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"蜂窝模组","slug":"硬件/蜂窝模组","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E8%9C%82%E7%AA%9D%E6%A8%A1%E7%BB%84/"}],"tags":[]},{"title":"","slug":"硬件/蜂窝模组/移远M26","date":"2020-08-16T01:10:19.533Z","updated":"2018-07-26T15:52:37.188Z","comments":true,"path":"2020/08/16/硬件/蜂窝模组/移远M26/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E8%9C%82%E7%AA%9D%E6%A8%A1%E7%BB%84/%E7%A7%BB%E8%BF%9CM26/","excerpt":"","text":"一些AT指令 AT测试12&quot;AT\\r\\n&quot;OK 设置串口通信波特率12&quot;AT+IPR&#x3D;115200\\r\\n&quot;OK SIM卡读取状态12&quot;AT+CPIN?\\r\\n&quot;+CPIN: READY 配置接收数据时是否显示IP头12&quot;AT+QIHEAD&#x3D;1\\r\\n&quot;OK 设置短消息为文本格式1&quot;AT+CMGF&#x3D;1\\r\\n&quot; 设置使用域名的方式连接（0=IP方式，1=域名方式）1&quot;AT+QIDNSIP&#x3D;1\\r\\n&quot; 设置GPRS附着12&quot;AT+CGATT&#x3D;1\\r\\n&quot;OK 启动任务并设置接入点APN12&quot;AT+QIREGAPP&#x3D;\\&quot;cmnet\\&quot;\\r\\n&quot;OK 查询当前接入的连接状态12&quot;AT+QISTATE\\r\\n&quot;STATE: IP START 激活移动场景12&quot;AT+QIACT\\r\\n&quot;OK 建立连接12&quot;AT+QIOPEN&#x3D;\\&quot;TCP\\&quot;,\\&quot;dev.a-cube.cn\\&quot;,\\&quot;10909\\&quot;\\r\\n&quot;CONNECT OK 发送数据1&quot;AT+QISEND&#x3D;&quot; 关闭连接1&quot;AT+QICLOSE\\r\\n&quot;","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"蜂窝模组","slug":"硬件/蜂窝模组","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E8%9C%82%E7%AA%9D%E6%A8%A1%E7%BB%84/"}],"tags":[]},{"title":"","slug":"硬件/树莓派/应用/Java开发","date":"2020-08-16T01:10:19.501Z","updated":"2018-10-28T15:35:05.332Z","comments":true,"path":"2020/08/16/硬件/树莓派/应用/Java开发/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/Java%E5%BC%80%E5%8F%91/","excerpt":"","text":"安装Pi4J Pi4j可以让java代码直接操作capella硬件，官网 http://pi4j.com/ 安装方式官网也有说明 http://pi4j.com/install.html Java开发用maven时，版本要用1.2以上的，否则最后的jar包运行时会报错。12345&lt;dependency&gt; &lt;groupId&gt;com.pi4j&lt;&#x2F;groupId&gt; &lt;artifactId&gt;pi4j-core&lt;&#x2F;artifactId&gt; &lt;version&gt;1.2-SNAPSHOT&lt;&#x2F;version&gt;&lt;&#x2F;dependency&gt; 官方maven仓库中只有1.1及以下的版本，需要在pom文件中添加1234567891011&lt;repositories&gt; &lt;repository&gt; &lt;id&gt;oss-snapshots-repo&lt;&#x2F;id&gt; &lt;name&gt;Sonatype OSS Maven Repository&lt;&#x2F;name&gt; &lt;url&gt;https:&#x2F;&#x2F;oss.sonatype.org&#x2F;content&#x2F;groups&#x2F;public&lt;&#x2F;url&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;&#x2F;enabled&gt; &lt;updatePolicy&gt;always&lt;&#x2F;updatePolicy&gt; &lt;&#x2F;snapshots&gt; &lt;&#x2F;repository&gt;&lt;&#x2F;repositories&gt;","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"应用","slug":"硬件/树莓派/应用","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/"}],"tags":[]},{"title":"","slug":"硬件/树莓派/应用/软件安装","date":"2020-08-16T01:10:19.501Z","updated":"2017-10-15T07:47:15.175Z","comments":true,"path":"2020/08/16/硬件/树莓派/应用/软件安装/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/","excerpt":"","text":"更新为国内的源 cd /etc/apt cp sources.list sources.list_back 备份原来的list文件 vim sources.list 修改为 http://mirrors.aliyun.com/raspbian/raspbian/ 安装常用软件 apt-get install vim apt-get install lrzsz 远程桌面软件 sudo apt-get install tightvncserver sudo apt-get install xrdp 如果开着防火墙ufw ， 那么打开服务器上的远程桌面访问端口(sudo ufw allow 3389) 安装jdk和tomcat jre环境本身已经有了，tomcat使用apt-get的方式安装: apt-get install tomcat8 tomcat目录位于 /var/lib/tomcat8 tomcat配置目录 /etc/tomcat8 安装redis 使用apt-get的方式安装 apt-get install redis-server 启动服务端: redis-server 登录客户端: redis-cli 关闭持久化: /etc/redis/redis.conf 下面3行改为 save “”123#save 900 1#save 300 10#save 60 10000 设置登录密码 /etc/redis/redis.conf requirepass 那一行 重启redis服务：/etc/init.d/redis-server restart 视频监控使用的开源项目 motion mjpg-streamer","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"应用","slug":"硬件/树莓派/应用","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/"}],"tags":[]},{"title":"","slug":"硬件/树莓派/应用/配置红外收发","date":"2020-08-16T01:10:19.501Z","updated":"2018-09-22T15:14:35.495Z","comments":true,"path":"2020/08/16/硬件/树莓派/应用/配置红外收发/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/%E9%85%8D%E7%BD%AE%E7%BA%A2%E5%A4%96%E6%94%B6%E5%8F%91/","excerpt":"","text":"比较靠谱的文章 www.linuxidc.com/Linux/2014-09/106409.htm 安装lirc模块 apt-get install lirc 内核中启动红外模块 vim /boot/config.txt “dtoverlay=lirc-rpi” 使能 设置硬件参数 vim /etc/lirc/hardware.conf1DEVICE&#x3D;&quot;&#x2F;dev&#x2F;lirc0&quot; 测试工作状态 sudo mode2 -d /dev/lirc0 # 按遥控上的任何键，查看是否有输出 sudo lircd -d /dev/lirc0 sudo irsend SEND_ONCE light KEY_F1","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"应用","slug":"硬件/树莓派/应用","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/"}],"tags":[]},{"title":"","slug":"硬件/树莓派/应用/homebridge","date":"2020-08-16T01:10:19.486Z","updated":"2019-04-21T05:45:25.421Z","comments":true,"path":"2020/08/16/硬件/树莓派/应用/homebridge/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/homebridge/","excerpt":"","text":"简介用于连接苹果的智能家居homekit，用苹果设备和Siri控制自己开发的硬件。Github：https://github.com/nfarina/homebridge 上面的readme也对使用做了比较详细的介绍。 安装首先安装npm1sudo apt-get install npm 安装homebridge1sudo npm install -g --unsafe-perm homebridge 测试是否安装成功1homebridge 安装插件homebridge的插件也是用npm方式安装，插件名都以”homebride-“开头。插件查找：https://www.npmjs.com/search?q=homebridge-plugin目前使用了以下插件： homebridge-http-switch 用于调用第三方http接口1 配置位于 ~/.homebridge/config.json 1234567891011121314151617181920212223242526 &quot;pin&quot;: &quot;031-45-189&quot; &#125;, &quot;accessories&quot;: [ &#123; &quot;accessory&quot;: &quot;HTTP-SWITCH&quot;, &quot;name&quot;: &quot;小夜灯&quot;, &quot;switchType&quot;: &quot;stateful&quot;, &quot;onUrl&quot;: &#123; &quot;url&quot;: &quot;http:&#x2F;&#x2F;192.168.88.103&#x2F;v1&#x2F;switch1&#x2F;on&quot;, &quot;method&quot;: &quot;POST&quot; &#125;, &quot;offUrl&quot;: &#123; &quot;url&quot;: &quot;http:&#x2F;&#x2F;192.168.88.103&#x2F;v1&#x2F;switch1&#x2F;off&quot;, &quot;method&quot;: &quot;POST&quot; &#125;, &quot;statusUrl&quot;: &#123; &quot;url&quot;:&quot;http:&#x2F;&#x2F;192.168.88.103&#x2F;v1&#x2F;switch1&#x2F;status&quot;, &quot;method&quot;: &quot;GET&quot; &#125; &#125; ]&#125;","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"应用","slug":"硬件/树莓派/应用","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/"}],"tags":[]},{"title":"","slug":"硬件/树莓派/应用/home-gateway","date":"2020-08-16T01:10:19.486Z","updated":"2019-06-02T10:04:24.031Z","comments":true,"path":"2020/08/16/硬件/树莓派/应用/home-gateway/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/home-gateway/","excerpt":"","text":"说明运行在树莓派上，连接公网mqtt的broker，接收远程命令，转发到内网的设备上。github：","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"应用","slug":"硬件/树莓派/应用","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/"}],"tags":[]},{"title":"","slug":"硬件/树莓派/硬件","date":"2020-08-16T01:10:19.470Z","updated":"2019-11-11T14:53:38.453Z","comments":true,"path":"2020/08/16/硬件/树莓派/硬件/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E7%A1%AC%E4%BB%B6/","excerpt":"","text":"GPIO 对照 原理图http://shumeipai.nxez.com/raspberry-pi-schematics","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"}],"tags":[]},{"title":"网络","slug":"硬件/树莓派/网络","date":"2020-08-16T01:10:19.470Z","updated":"2020-08-16T01:01:37.179Z","comments":true,"path":"2020/08/16/硬件/树莓派/网络/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E7%BD%91%E7%BB%9C/","excerpt":"","text":"修改主机名默认主机名：raspberrypi修改： 修改/etc/hostname文件 修改/etc/host文件 127.0.1.1 对应的主机名 Pi3B","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"}],"tags":[]},{"title":"","slug":"硬件/树莓派/系统配置","date":"2020-08-16T01:10:19.470Z","updated":"2020-01-11T09:04:28.933Z","comments":true,"path":"2020/08/16/硬件/树莓派/系统配置/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/","excerpt":"","text":"系统安装mac下烧写sd卡123diskutil listdiskutil umountDisk &#x2F;dev&#x2F;disk2sudo dd if&#x3D;2018-04-18-raspbian-stretch.img of&#x3D;&#x2F;dev&#x2F;disk2 bs&#x3D;4m 系统配置配置命令命令行模式下: raspi-configGUI模式下在菜单中找到即可 网络设置 路由器信道不要选“自动”，有些信道树莓派的网络很差，选一个中间的信道 路由器设置mac地址与ip绑定，比树莓派里面设置静态ip，使用起来更灵活一些 远程登录用户名：pi 密码：raspberry解决官方镜像ssh默认关闭 1sudo systemctl enable ssh 包管理工具 apt-get安装好系统后，先升级以下apt-get 12apt-get upgradeapt-get update 更新为国内的源123cd &#x2F;etc&#x2F;aptcp sources.list sources.list_back # 备份原来的list文件vim sources.list # 修改为 阿里镜像源 腾讯云镜像源说明 https://mirrors.cloud.tencent.com/help/raspbian.html1防止修改没生效，删除 &#x2F;etc&#x2F;apt&#x2F;suorces.list.d 下的文件 应用开发开机启动自己的程序 编写一个启动脚本，放到 /etc/init.d/ 中，例如：123#! &#x2F;bin&#x2F;sh#chkconfig 3 100 110java -jar &#x2F;home&#x2F;pi&#x2F;Downloads&#x2F;MQTT&#x2F;client-mqtt-1.0-SNAPSHOT.jar &gt;&gt; &#x2F;home&#x2F;pi&#x2F;test.log 用chkconfig命令设置开机启动12chkconfig --listchkconfig --level 35 mysqld on","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"}],"tags":[]},{"title":"","slug":"硬件/树莓派/test","date":"2020-08-16T01:10:19.455Z","updated":"2019-08-03T04:40:04.055Z","comments":true,"path":"2020/08/16/硬件/树莓派/test/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/test/","excerpt":"","text":"biao广东省gdgd 哈哈哈 很多很多好","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"}],"tags":[]},{"title":"","slug":"硬件/天猫精灵/开发者平台OAuth2.0","date":"2020-08-16T01:10:19.455Z","updated":"2019-04-14T01:16:33.662Z","comments":true,"path":"2020/08/16/硬件/天猫精灵/开发者平台OAuth2.0/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E5%A4%A9%E7%8C%AB%E7%B2%BE%E7%81%B5/%E5%BC%80%E5%8F%91%E8%80%85%E5%B9%B3%E5%8F%B0OAuth2.0/","excerpt":"","text":"模拟天猫服务端调用 授权跳转1https:&#x2F;&#x2F;xxx.com&#x2F;auth&#x2F;authorize?redirect_uri&#x3D;https%3A%2F%2Fopen.bot.tmall.com%2Foauth%2Fcallback%3FskillId%3D11111111%26token%3DXXXXXXXXXX&amp;client_id&#x3D;XXXXXXXXX&amp;response_type&#x3D;code&amp;state&#x3D;111 1curl -X GET &#39;http:&#x2F;&#x2F;localhost:8090&#x2F;auth&#x2F;authorize?redirect_uri&#x3D;https%3A%2F%2Fopen.bot.tmall.com%2Foauth%2Fcallback%3FskillId%3D11111111%26token%3Dabcde&amp;client_id&#x3D;wwwxyz&amp;response_type&#x3D;code&amp;state&#x3D;111&#39;","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"天猫精灵","slug":"硬件/天猫精灵","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E5%A4%A9%E7%8C%AB%E7%B2%BE%E7%81%B5/"}],"tags":[]},{"title":"","slug":"硬件/NanoPi/状态上报","date":"2020-08-16T01:10:19.439Z","updated":"2020-08-15T13:02:02.122Z","comments":true,"path":"2020/08/16/硬件/NanoPi/状态上报/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/NanoPi/%E7%8A%B6%E6%80%81%E4%B8%8A%E6%8A%A5/","excerpt":"","text":"上报至企业微信企业微信群可以创建机器人，调用http接口，就可以让机器人在群里发消息。 利用这个特性，让NanoPi在自己的公网ip变化后，在微信群里通知。 编写脚本1234567891011121314151617181920#!&#x2F;bin&#x2F;bash sleep 30# rebootcurl &#39;https:&#x2F;&#x2F;qyapi.weixin.qq.com&#x2F;cgi-bin&#x2F;webhook&#x2F;send?key&#x3D;83b169f3-a958-46b7-8b7a-4f468f8d3608&#39; \\ -H &#39;Content-Type: application&#x2F;json&#39; \\ -d &#39;&#123;&quot;msgtype&quot;:&quot;text&quot;, &quot;text&quot;:&#123;&quot;content&quot;:&quot;server reboot&quot;&#125;&#125;&#39;# ip addrmyipadd&#x3D;0.0.0.0#while true; do temp1&#x3D;$(curl ip.sb) if [[ &quot;$temp1&quot; !&#x3D; &quot;$myipadd&quot; ]] &amp;&amp; [[ $&#123;#temp1&#125; -gt 7 ]] ;then myipadd&#x3D;$temp1 curl &#39;https:&#x2F;&#x2F;qyapi.weixin.qq.com&#x2F;cgi-bin&#x2F;webhook&#x2F;send?key&#x3D;83b169f3-a958-46b7-8b7a-4f468f8d3608&#39; \\ -H &#39;Content-Type: application&#x2F;json&#39; \\ -d &quot;&#123;\\&quot;msgtype\\&quot;: \\&quot;text\\&quot;,\\&quot;text\\&quot;: &#123;\\&quot;content\\&quot;: \\&quot;ip:$&#123;myipadd&#125;\\&quot;&#125;&#125;&quot; fi s 在/etc/rc.local中添加开机启动123# status reportnohup &#x2F;home&#x2F;pi&#x2F;workspace&#x2F;report&#x2F;report-weixin.sh &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 &amp;","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"NanoPi","slug":"硬件/NanoPi","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/NanoPi/"}],"tags":[]},{"title":"","slug":"硬件/NanoPi/安装和配置","date":"2020-08-16T01:10:19.439Z","updated":"2020-02-22T06:17:31.989Z","comments":true,"path":"2020/08/16/硬件/NanoPi/安装和配置/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/NanoPi/%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/","excerpt":"","text":"官方资料http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO/zh#DietPi 烧录系统安装内网穿透格式化硬盘 查看硬盘 1fdisk -l 分区 1fdisk &#x2F;dev&#x2F;sda 格式化 1mkfs.ext4 &#x2F;dev&#x2F;sda1 修改卷标(磁盘名称)(ext2/ext3/ext4) 1e2label &#x2F;dev&#x2F;yourpartition &quot;mydiskname&quot; 查看挂载情况 1df 设置开机自动挂载 安装和配置samba 安装samba 1apt-get install samba 添加用户 12&#x2F;&#x2F; 用户名必须是系统中已有的用户smbpasswd -a 用户名 编辑配置文件 1gedit &#x2F;etc&#x2F;samba&#x2F;smb.conf 在末尾添加： 123456789101112[share]comment &#x3D; share folderbrowseable &#x3D; yespath &#x3D; &#x2F;home&#x2F;linuxidc&#x2F;linuxidc.com&#x2F;sharecreate mask &#x3D; 0700directory mask &#x3D; 0700valid users &#x3D; linuxidcforce user &#x3D; linuxidcforce group &#x3D; linuxidcpublic &#x3D; yesavailable &#x3D; yeswritable &#x3D; yes 启动服务 1234service smbd restart&#x2F;&#x2F; 开机启动systemctl enable smbd 注意 1samba 4.5以上的版本，需要在global配置中添加 ntlm auth &#x3D; yes 支持老的客户端版本的认证","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"NanoPi","slug":"硬件/NanoPi","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/NanoPi/"}],"tags":[]},{"title":"","slug":"硬件/NanoPi/温度控制风扇","date":"2020-08-16T01:10:19.439Z","updated":"2020-02-22T11:32:47.510Z","comments":true,"path":"2020/08/16/硬件/NanoPi/温度控制风扇/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/NanoPi/%E6%B8%A9%E5%BA%A6%E6%8E%A7%E5%88%B6%E9%A3%8E%E6%89%87/","excerpt":"","text":"获取cpu温度cat /sys/devices/virtual/thermal/thermal_zone0/temp 安装gpiogit clone https://github.com/friendlyarm/WiringNPcd WiringNP/chmod 755 build./build WiringNP包括一套gpio命令，使用gpio命令可以控制NanoPi上的各种接口，通过以下指令可以测试WiringNP是否安装成功: gpio readall 脚本创建一个shell脚本： vi test.sh 然后键入如下代码: 12345678LED&#x3D;7gpio mode $LED outwhile true; do gpio write $LED 1 sleep 0.5 gpio write $LED 0 sleep 0.5done 运行脚本： 1sudo source test.sh 硬件 小风扇5V 使用gpio4(物理pin脚16) 使用mos管si2300驱动，类似npn三极管用法 控制脚本 编写脚本文件：cpu-fan.sh12345678910111213141516#!&#x2F;bin&#x2F;bash# cpu fanMYFAN&#x3D;4gpio mode $MYFAN out#while true; do mytemp&#x3D;$(cat &#x2F;sys&#x2F;devices&#x2F;virtual&#x2F;thermal&#x2F;thermal_zone0&#x2F;temp) if [[ &quot;$mytemp&quot; -ge &quot;33000&quot; ]];then gpio write $MYFAN 1 elif [[ &quot;$mytemp&quot; -le &quot;31000&quot; ]];then gpio write $MYFAN 0 fi sleep 60done 在etc/rc.local 文件中添加启动12# cpu fannohup &#x2F;home&#x2F;pi&#x2F;workspace&#x2F;gpio&#x2F;cpu-fan.sh &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 &amp;","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"NanoPi","slug":"硬件/NanoPi","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/NanoPi/"}],"tags":[]},{"title":"","slug":"硬件/ESP8266/模块简介","date":"2020-08-16T01:10:19.423Z","updated":"2018-09-22T15:14:35.079Z","comments":true,"path":"2020/08/16/硬件/ESP8266/模块简介/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/ESP8266/%E6%A8%A1%E5%9D%97%E7%AE%80%E4%BB%8B/","excerpt":"","text":"","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"ESP8266","slug":"硬件/ESP8266","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/ESP8266/"}],"tags":[]},{"title":"","slug":"硬件/NanoPi/nginx转发","date":"2020-08-16T01:10:19.423Z","updated":"2020-02-22T12:52:28.980Z","comments":true,"path":"2020/08/16/硬件/NanoPi/nginx转发/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/NanoPi/nginx%E8%BD%AC%E5%8F%91/","excerpt":"","text":"","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"NanoPi","slug":"硬件/NanoPi","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/NanoPi/"}],"tags":[]},{"title":"","slug":"硬件/优化","date":"2020-08-16T01:10:19.423Z","updated":"2019-10-08T17:16:35.129Z","comments":true,"path":"2020/08/16/硬件/优化/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/%E4%BC%98%E5%8C%96/","excerpt":"","text":"ssh登录信息（cpu温度）/etc/update-motd.d","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"}],"tags":[]},{"title":"D1 Mini 管脚图","slug":"硬件/ESP8266/D1 Mimi 管脚图","date":"2020-08-16T01:10:19.423Z","updated":"2020-08-16T00:58:01.289Z","comments":true,"path":"2020/08/16/硬件/ESP8266/D1 Mimi 管脚图/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%A1%AC%E4%BB%B6/ESP8266/D1%20Mimi%20%E7%AE%A1%E8%84%9A%E5%9B%BE/","excerpt":"","text":"官网 https://wiki.wemos.cc/products:d1:d1_mini 管脚图 Pin Function ESP-8266 Pin TX TXD TXD RX RXD RXD A0 Analog input, max 3.3V input A0 D0 IO GPIO16 D1 IO, SCL GPIO5 D2 IO, SDA GPIO4 D3 IO, 10k Pull-up GPIO0 D4 IO, 10k Pull-up, BUILTIN_LED GPIO2 D5 IO, SCK GPIO14 D6 IO, MISO GPIO12 D7 IO, MOSI GPIO13 D8 IO, 10k Pull-down, SS GPIO15 G Ground GND 5V 5V - 3V3 3.3V 3.3V RST Reset RST","categories":[{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"ESP8266","slug":"硬件/ESP8266","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/ESP8266/"}],"tags":[]},{"title":"","slug":"协议/SIP/OpenSIPS","date":"2020-08-16T01:10:19.408Z","updated":"2020-08-15T13:02:02.106Z","comments":true,"path":"2020/08/16/协议/SIP/OpenSIPS/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%8D%8F%E8%AE%AE/SIP/OpenSIPS/","excerpt":"","text":"","categories":[{"name":"协议","slug":"协议","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/"},{"name":"SIP","slug":"协议/SIP","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/SIP/"}],"tags":[]},{"title":"","slug":"协议/MQTT/MQTT协议介绍","date":"2020-08-16T01:10:19.408Z","updated":"2018-07-10T14:30:32.855Z","comments":true,"path":"2020/08/16/协议/MQTT/MQTT协议介绍/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%8D%8F%E8%AE%AE/MQTT/MQTT%E5%8D%8F%E8%AE%AE%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"基本介绍 最新版本V3.1.1 (2014年10月) 基于TCP/IP，也可以基于websocket 发布/订阅 模式 基本概念 消息服务质量：最多一次、至少一次、有且只有一次 控制报文：14种（连接、心跳、发布、订阅等） 主题(topic) 报文格式 固定报头 可变报头 (部分报文有) （部分报文有报文标识符） 有效载荷（payload）（部分报文有） 主题名和主题过滤器 主题层级分隔符: ‘/‘ 多层通配符: ‘#’, eg: “sport/tennis/player1/#” 单层通配符: ‘+’, eg: “sport/+/plater1” 14种控制报文的列表连接和断开报文(2) 可变报头：协议名版本、连接标志(用户名密码、遗言、CleanSession标志)、保持连接 载荷（连接标志里的内容）、clientID 连接确认报文(1) 连接结果返回码 发布消息与响应(5) 重发标志 消息的服务质量 保留标志 ？ 主题名 内容 根据不同质量的消息响应不同 订阅消息与响应(2) 订阅消息的主题，要求的服务质量 取消订阅与响应(2) 和订阅类似 心跳与响应(2) 没有报头和有效载荷","categories":[{"name":"协议","slug":"协议","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/"},{"name":"MQTT","slug":"协议/MQTT","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/MQTT/"}],"tags":[]},{"title":"相关组件","slug":"协议/MQTT/相关组件","date":"2020-08-16T01:10:19.408Z","updated":"2020-08-16T01:07:20.793Z","comments":true,"path":"2020/08/16/协议/MQTT/相关组件/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%8D%8F%E8%AE%AE/MQTT/%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/","excerpt":"","text":"Broker Emq 客户端工具 mosquitto 安装 12345678yum install epel-release# 这里安装的是服务端(broker)yum install mosquittosystemctl start mosquitto# 安装客户端(ubuntu)apt-get install mosquitto-clients 发布 1mosquitto_pub -h &#x27;192.168.8.160&#x27; -u &#x27;869378036472330&#x27; -i &#x27;869378036472330&#x27; -P &#x27;token1&#x27; -t &#x27;device/869378036472330/up&#x27; -m &#x27;&#123;&quot;button1&quot;:true&#125;&#x27; 订阅 1mosquitto_sub -h &#x27;192.168.8.160&#x27; -u &#x27;474419534816436&#x27; -i &#x27;474419534816436&#x27; -P &#x27;0DMmU6jYVLNrkxm7&#x27; -t &#x27;device/474419534816436/down&#x27; -q 1","categories":[{"name":"协议","slug":"协议","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/"},{"name":"MQTT","slug":"协议/MQTT","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/MQTT/"}],"tags":[]},{"title":"","slug":"协议/SIP/P2P","date":"2020-08-16T01:10:19.408Z","updated":"2020-08-15T13:02:02.106Z","comments":true,"path":"2020/08/16/协议/SIP/P2P/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%8D%8F%E8%AE%AE/SIP/P2P/","excerpt":"","text":"参考：https://www.cnblogs.com/mlgjb/p/8243690.html","categories":[{"name":"协议","slug":"协议","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/"},{"name":"SIP","slug":"协议/SIP","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/SIP/"}],"tags":[]},{"title":"","slug":"协议/ProtoBuf","date":"2020-08-16T01:10:19.392Z","updated":"2019-03-13T14:02:33.876Z","comments":true,"path":"2020/08/16/协议/ProtoBuf/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%8D%8F%E8%AE%AE/ProtoBuf/","excerpt":"","text":"proto文件 数据传输时，如果值为0，整个字段都会丢失，使用google定义的数据类型解决问题1234567google.protobuf.DoubleValueimport &quot;google&#x2F;protobuf&#x2F;wrappers.proto&quot;;message GetTenantEnergyResponse &#123; double totalEnergy &#x3D; 1; &#x2F;&#x2F; 这个数据为0时整个字段都会丢失 google.protobuf.DoubleValue data1 &#x3D; 2; &#x2F;&#x2F; 这个不会&#125;","categories":[{"name":"协议","slug":"协议","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/"}],"tags":[]},{"title":"","slug":"协议/CoAP","date":"2020-08-16T01:10:19.392Z","updated":"2019-03-13T14:02:33.892Z","comments":true,"path":"2020/08/16/协议/CoAP/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%8D%8F%E8%AE%AE/CoAP/","excerpt":"","text":"客户端工具libcoaplibcaop是一个CoAP协议的C语言实现，可以使用里面的CoAP客户端模拟设备收发数据。 CentOS系统上安装libcoap。 安装编译过程中依赖的工具1yum install -y git autoconf automake libtool 从github上下载源码1git clone -b v4.2.0-rc2 https:&#x2F;&#x2F;github.com&#x2F;obgm&#x2F;libcoap.git 由于源码里的默认配置会造成客户端发送URL过长时数据发不出去，所以需要修改源码文件。1修改源码文件的 examples&#x2F;client.c 里 “#define BUFSIZE 40”里的40改大一些，比如改为120 编译1234cd libcoap.&#x2F;autogen.sh.&#x2F;configure --enable-documentation&#x3D;no --enable-tests&#x3D;nomake 客户端可执行文件coap-client位于example文件夹下。 使用示例123.&#x2F;coap-client -m put -e &#39;&#123;&quot;button1&quot;:&quot;1&quot;&#125;&#39; &quot;coap:&#x2F;&#x2F;$&#123;SERVER_HOST&#125;:5683&#x2F;mqtt&#x2F;device%2F869378036472330%2Fup?c&#x3D;869378036472330&amp;u&#x3D;869378036472330&amp;p&#x3D;token1&quot;.&#x2F;coap-client -m get -s 10 &quot;coap:&#x2F;&#x2F;$&#123;SERVER_HOST&#125;:5683&#x2F;mqtt&#x2F;device%2F869378036472330%2Fdown?c&#x3D;869378036472330&amp;u&#x3D;869378036472330&amp;p&#x3D;token1&quot;","categories":[{"name":"协议","slug":"协议","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/"}],"tags":[]},{"title":"","slug":"协议/HTTP/Cookie","date":"2020-08-16T01:10:19.392Z","updated":"2020-08-15T13:02:02.106Z","comments":true,"path":"2020/08/16/协议/HTTP/Cookie/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%8D%8F%E8%AE%AE/HTTP/Cookie/","excerpt":"","text":"Cookiehttps://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html https://cloud.tencent.com/developer/section/1189999","categories":[{"name":"协议","slug":"协议","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/"},{"name":"HTTP","slug":"协议/HTTP","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/HTTP/"}],"tags":[]},{"title":"","slug":"软件模块/应用软件/sonar","date":"2020-08-16T01:10:19.345Z","updated":"2020-08-15T13:02:02.169Z","comments":true,"path":"2020/08/16/软件模块/应用软件/sonar/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/sonar/","excerpt":"","text":"安装和配置(docker)参考：https://blog.csdn.net/qaz5209103/article/details/82563053 安装依赖的数据库 12docker pull postgresdocker run --name db -e POSTGRES_USER&#x3D;sonar -e POSTGRES_PASSWORD&#x3D;sonar -d postgres 拉取和启动 1234567891011121314docker pull sonarqubedocker run --name sq --link db -e SONARQUBE_JDBC_URL&#x3D;jdbc:postgresql:&#x2F;&#x2F;db:5432&#x2F;sonar -p 9000:9000 -d sonarqube# 如果报错：# max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]# 解决：# 执行命令：sysctl -w vm.max_map_count&#x3D;262144# 查看结果：sysctl -a|grep vm.max_map_count# 显示：vm.max_map_count &#x3D; 262144# 上述方法修改之后，如果重启虚拟机将失效，所以解决办法：# 在&#x2F;etc&#x2F;sysctl.conf文件最后添加一行# vm.max_map_count&#x3D;262144# 即可永久修改 打开 http://host:9000/ , 点击 “Log in” 1登录账号：admin 密码：admin 第一次登录，创建一个token，用于项目连接时用。 工程maven pom build添加jacoco插件 123456789101112131415161718192021222324252627282930&lt;build&gt; &lt;plugins&gt; &lt;!-- 用于sonar代码扫描 --&gt; &lt;plugin&gt; &lt;groupId&gt;org.jacoco&lt;&#x2F;groupId&gt; &lt;artifactId&gt;jacoco-maven-plugin&lt;&#x2F;artifactId&gt; &lt;version&gt;0.8.3&lt;&#x2F;version&gt; &lt;configuration&gt; &lt;includes&gt; &lt;include&gt;com&#x2F;**&#x2F;*&lt;&#x2F;include&gt; &lt;&#x2F;includes&gt; &lt;&#x2F;configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;pre-test&lt;&#x2F;id&gt; &lt;goals&gt; &lt;goal&gt;prepare-agent&lt;&#x2F;goal&gt; &lt;&#x2F;goals&gt; &lt;&#x2F;execution&gt; &lt;execution&gt; &lt;id&gt;post-test&lt;&#x2F;id&gt; &lt;phase&gt;test&lt;&#x2F;phase&gt; &lt;goals&gt; &lt;goal&gt;report&lt;&#x2F;goal&gt; &lt;&#x2F;goals&gt; &lt;&#x2F;execution&gt; &lt;&#x2F;executions&gt; &lt;&#x2F;plugin&gt; &lt;&#x2F;plugins&gt;&lt;&#x2F;build&gt; 命令maven 本地打包扫描 1mvn clean verify sonar:sonar -Dsonar.host.url&#x3D;http:&#x2F;&#x2F;192.168.88.151:9000 可以将sonar host配置在maven的全局配置文件中 1234567891011&lt;profiles&gt; &lt;profile&gt; &lt;id&gt;sonar&lt;&#x2F;id&gt; &lt;activation&gt; &lt;activeByDefault&gt;true&lt;&#x2F;activeByDefault&gt; &lt;&#x2F;activation&gt; &lt;properties&gt; &lt;sonar.host.url&gt;http:&#x2F;&#x2F;192.168.88.151:9000&lt;&#x2F;sonar.host.url&gt; &lt;&#x2F;properties&gt; &lt;&#x2F;profile&gt;&lt;&#x2F;profiles&gt;","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"","slug":"软件模块/应用软件/thingsboard","date":"2020-08-16T01:10:19.345Z","updated":"2019-05-26T09:40:05.607Z","comments":true,"path":"2020/08/16/软件模块/应用软件/thingsboard/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/thingsboard/","excerpt":"","text":"docker部署参考：https://hub.docker.com/r/thingsboard/tb-postgres部署： 1234567docker run -d --restart always --name thingsboard \\ -v ~&#x2F;.thingsboard-data:&#x2F;data \\ -v ~&#x2F;.thingsboard-logs:&#x2F;var&#x2F;logs&#x2F;thingsboard \\ -p 1883:1883&#x2F;tcp \\ -p 5683:5683&#x2F;udp \\ -p 9090:9090&#x2F;tcp \\ thingsboard&#x2F;tb-postgres:2.3.1 访问： Systen Administrator: &#x73;&#121;&#x73;&#97;&#x64;&#109;&#105;&#110;&#x40;&#x74;&#104;&#x69;&#110;&#x67;&#x73;&#98;&#111;&#x61;&#114;&#x64;&#46;&#111;&#x72;&#x67; / sysadmin Tenant Administrator: &#x74;&#x65;&#x6e;&#x61;&#x6e;&#116;&#64;&#x74;&#x68;&#105;&#x6e;&#103;&#115;&#98;&#x6f;&#x61;&#114;&#x64;&#46;&#x6f;&#114;&#x67; / tenant Customer User: &#99;&#117;&#115;&#116;&#111;&#x6d;&#101;&#114;&#x40;&#116;&#x68;&#x69;&#110;&#x67;&#x73;&#x62;&#111;&#x61;&#114;&#100;&#x2e;&#x6f;&#x72;&#103; / customer","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"","slug":"软件模块/应用软件/yapi","date":"2020-08-16T01:10:19.345Z","updated":"2020-08-15T13:02:02.169Z","comments":true,"path":"2020/08/16/软件模块/应用软件/yapi/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/yapi/","excerpt":"","text":"基本说明前后端HTTP接口联调mock工具。支持接口导出导入。github：https://github.com/YMFE/yapi Docker安装参考：https://www.jianshu.com/p/a97d2efb23c5 1. 启动MongoDB1docker run -d --name mongo-yapi mongo 2. 构建Docker镜像，或者从网上获取镜像1docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;anoy&#x2F;yapi 3. 初始化 Yapi 数据库索引及管理员账号123456docker run -it --rm \\ --link mongo-yapi:mongo \\ --entrypoint npm \\ --workdir &#x2F;api&#x2F;vendors \\ registry.cn-hangzhou.aliyuncs.com&#x2F;anoy&#x2F;yapi \\ run install-server 如果不想用默认的配置文件初始化，可以自定义配置文件挂载到目录 /api/config.json 官方自定义配置文件: 12345678910111213141516171819202122&#123; &quot;port&quot;: &quot;3000&quot;, &quot;adminAccount&quot;: &quot;admin@admin.com&quot;, &quot;db&quot;: &#123; &quot;servername&quot;: &quot;127.0.0.1&quot;, &quot;DATABASE&quot;: &quot;yapi&quot;, &quot;port&quot;: 27017, &quot;user&quot;: &quot;test1&quot;, &quot;pass&quot;: &quot;test1&quot;, &quot;authSource&quot;: &quot;&quot; &#125;, &quot;mail&quot;: &#123; &quot;enable&quot;: true, &quot;host&quot;: &quot;smtp.163.com&quot;, &quot;port&quot;: 465, &quot;from&quot;: &quot;***@163.com&quot;, &quot;auth&quot;: &#123; &quot;user&quot;: &quot;***@163.com&quot;, &quot;pass&quot;: &quot;*****&quot; &#125; &#125;&#125; 4. 启动 Yapi 服务1234567docker run -d \\ --name yapi \\ --link mongo-yapi:mongo \\ --workdir &#x2F;api&#x2F;vendors \\ -p 3000:3000 \\ registry.cn-hangzhou.aliyuncs.com&#x2F;anoy&#x2F;yapi \\ server&#x2F;app.js 5. 使用Yapi访问 http://localhost:3000 登录账号 &#97;&#100;&#x6d;&#105;&#x6e;&#64;&#x61;&#100;&#109;&#105;&#x6e;&#x2e;&#99;&#111;&#x6d;，密码 ymfe.org 自己构建Docker镜像1. 下载 YAPI 到本地直接在官方github上下载 1wget -o yapi.tar.gz https:&#x2F;&#x2F;github.com&#x2F;YMFE&#x2F;yapi&#x2F;archive&#x2F;v1.8.0.tar.gz 2. 编辑config.json1234567891011&#123; &quot;port&quot;: &quot;3000&quot;, &quot;adminAccount&quot;: &quot;admin@admin.com&quot;, &quot;db&quot;: &#123; &quot;servername&quot;: &quot;mongo&quot;, &quot;DATABASE&quot;: &quot;yapi&quot;, &quot;port&quot;: 27017 &#125;&#125; 3. 编辑Dockerfile1234567891011121314151617181920212223242526FROM node:12-alpine as builderRUN apk add --no-cache git python make openssl tar gccCOPY yapi.tar.gz &#x2F;homeRUN cd &#x2F;home &amp;&amp; tar zxvf yapi.tar.gz &amp;&amp; mkdir &#x2F;api &amp;&amp; mv &#x2F;home&#x2F;yapi-1.8.0 &#x2F;api&#x2F;vendorsRUN cd &#x2F;api&#x2F;vendors &amp;&amp; \\ npm install --production --registry https:&#x2F;&#x2F;registry.npm.taobao.orgFROM node:12-alpineMAINTAINER 545544032@qq.comENV TZ&#x3D;&quot;Asia&#x2F;Shanghai&quot; HOME&#x3D;&quot;&#x2F;&quot;WORKDIR $&#123;HOME&#125;COPY --from&#x3D;builder &#x2F;api&#x2F;vendors &#x2F;api&#x2F;vendorsCOPY config.json &#x2F;api&#x2F;EXPOSE 3000ENTRYPOINT [&quot;node&quot;] 4. 构建镜像1docker build -t yapi .","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"虚拟机","slug":"软件模块/办公/虚拟机","date":"2020-08-16T01:10:19.314Z","updated":"2020-08-16T01:04:39.719Z","comments":true,"path":"2020/08/16/软件模块/办公/虚拟机/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%8A%9E%E5%85%AC/%E8%99%9A%E6%8B%9F%E6%9C%BA/","excerpt":"","text":"禁用virbr0虚拟网卡CentOS 7 删除 virbr0 1、先关闭virbr0 服务：ifconfig virbr0 down 2、删除virbr0 服务：brctl delbr virbr0 3、关闭virbr0 自启动服务：systemctl disable libvirtd 2在CentOS 7的安装过程中，如果有选择相关虚拟化的的服务，那么安装系统后，启动网卡时会发现有一个以网桥连接的私网地址的virbr0网卡，这个是因为在虚拟化中有使用到libvirtd服务生成的，如果不需要可以按以下步骤关闭后去掉： 关闭虚拟网卡的步骤： 1，先查看是否有连接相关虚拟设备 virsh net-list 2.使用“virsh net-destroy default”删除 3.从配置文件中剔除 virsh net-undefine default 4.重启libvirtd服务 systemctl restart libvirtd.service 此时，再次查看，发现不必要的信息已经清除，清爽多了 然而，有时KVM启用桥接后，系统无法发现VIRBR0网卡，可利用下面方法手工添加 virsh net-define /usr/share/libvirt/networks/default.xmlNetwork default defined from /usr/share/libvirt/networks/default.xml virsh net-autostart defaultNetwork default marked as autostarted virsh net-start defaultNetwork default started 有时发现dnsmasq服务停不掉，可能也与此有关。","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"办公","slug":"软件模块/办公","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%8A%9E%E5%85%AC/"}],"tags":[]},{"title":"Apollo","slug":"软件模块/应用软件/apollo","date":"2020-08-16T01:10:19.314Z","updated":"2020-08-16T01:05:02.944Z","comments":true,"path":"2020/08/16/软件模块/应用软件/apollo/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/apollo/","excerpt":"","text":"统一配置中心github：https://github.com/ctripcorp/apollo","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"Hexo","slug":"软件模块/应用软件/hexo","date":"2020-08-16T01:10:19.314Z","updated":"2020-08-16T01:05:15.820Z","comments":true,"path":"2020/08/16/软件模块/应用软件/hexo/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/hexo/","excerpt":"","text":"基本信息资料官网文档：https://hexo.io/zh-cn/docs/index.html 其它： https://zhuanlan.zhihu.com/p/26625249 主题在官网上查找主题：https://hexo.io/themes/ 目前使用的主题是 插件https://hexo.io/zh-cn/docs/one-command-deployment.html 尝试使用 hexo-deployer-sftp部署到远程服务器 安装和配置先装好nodejs，然后用npm安装 1npm install -g hexo-cli 初始化目录 1hexo init [name] 下载主题 12345678# git clone https:&#x2F;&#x2F;github.com&#x2F;zthxxx&#x2F;hexo-theme-Wikitten.git themes&#x2F;Wikitten# 根据Wikitten主题readme里的操作cp -rf themes&#x2F;Wikitten&#x2F;_source&#x2F;* source&#x2F;cp -rf themes&#x2F;Wikitten&#x2F;_scaffolds&#x2F;* scaffolds&#x2F;cp -f themes&#x2F;Wikitten&#x2F;_config.yml.example themes&#x2F;Wikitten&#x2F;_config.ymlvim themes&#x2F;Wikitten&#x2F;_config.yml 主题配置文件 1234&#96;&#96;&#96;添加图标logo.png到source目录下添加主题对应需要的插件 npm i -S hexo-directory-category hexo-generator-json-content hexo-generator-sitemap 12修改主题底部信息，\\themes\\Wikitten\\layout\\common\\footer.ejs &copy; 备案号预留 Powered by Hexo. Theme - wikitten 123456789101112131415161718全局配置文件，主要修改站点信息和主题&#96;&#96;&#96;yaml# Sitetitle: IO Man&#39;s Wikisubtitle: &#39;&#39;description: &#39;&#39;keywords:author: Hu Panlanguage: zh-CNtimezone: &#39;Asia&#x2F;Shanghai&#39;... ...... ...theme: Wikitten 编译和发布 12hexo ghexo s 将public文件夹拷贝到需要发布的地方 使用插件hexo-deployer-sftp上传 安装插件 1npm install hexo-deployer-sftp --save hexo配置文件中添加配置 123456789deploy: type: sftp host: micro-code.com user: root privateKey: C:\\Users\\PanPan\\.ssh\\id_rsa remotePath: &#x2F;home&#x2F;hexo&#x2F;temp # pass: #port: [port] #agent: [path&#x2F;to&#x2F;agent&#x2F;socket]","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"Http-Server","slug":"软件模块/应用软件/http-server","date":"2020-08-16T01:10:19.314Z","updated":"2020-08-16T01:05:52.561Z","comments":true,"path":"2020/08/16/软件模块/应用软件/http-server/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/http-server/","excerpt":"","text":"资料https://www.npmjs.com/package/http-server docker1docker run -d --name http-server -p 9001:8080 -v &#x2F;media&#x2F;share&#x2F;public:&#x2F;public danjellz&#x2F;http-server:1.2 安装(树莓派)安装nodejs 12apt-get install nodeapt-get install npm 报错：/usr/bin/env: node: 没有那个文件或目录 1sudo ln -s &#x2F;usr&#x2F;bin&#x2F;nodejs &#x2F;usr&#x2F;bin&#x2F;node 使用 1http-server [path] [options] 举例： 1http-server &#x2F;media&#x2F;pi&#x2F;bear&#x2F;share -p 9001","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"","slug":"软件模块/应用软件/minio","date":"2020-08-16T01:10:19.314Z","updated":"2020-08-15T13:02:02.153Z","comments":true,"path":"2020/08/16/软件模块/应用软件/minio/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/minio/","excerpt":"","text":"docker启动创建永久链接","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"","slug":"软件模块/应用软件/nexus","date":"2020-08-16T01:10:19.314Z","updated":"2019-08-25T12:57:41.992Z","comments":true,"path":"2020/08/16/软件模块/应用软件/nexus/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/nexus/","excerpt":"","text":"说明用于搭建各种私有仓库。 Docker服务比较吃内存，在配置低的机器上跑不起来 1docker run -d -p 8081:8081 --name nexus -v &#x2F;root&#x2F;nexus-data:&#x2F;var&#x2F;nexus-data --restart&#x3D;always sonatype&#x2F;nexus3 搭建Maven私服参考：https://blog.csdn.net/u012943767/article/details/79475718","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"Samba","slug":"软件模块/应用软件/samba","date":"2020-08-16T01:10:19.314Z","updated":"2020-08-16T01:06:34.942Z","comments":true,"path":"2020/08/16/软件模块/应用软件/samba/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/samba/","excerpt":"","text":"docker123456789docker run --restart always --name smb2 \\-v &#x2F;media&#x2F;smb&#x2F;public:&#x2F;share&#x2F;public \\-p 137:137&#x2F;udp \\-p 138:138&#x2F;udp \\-p 139:139 \\-p 445:445 \\-d dperson&#x2F;samba -p \\-u &quot;smb1;a123456&quot; \\-s &quot;public;&#x2F;share&#x2F;public;yes;no;yes&quot; \\ 直接安装1sudo apt-get install samba 修改配置文件(建议先备份)：/etc/samba/smb.conf添加： 12345678910[share]comment &#x3D; share folderbrowseable &#x3D; yespath &#x3D; &#x2F;media&#x2F;sharecreate mask &#x3D; 0700directory mask &#x3D; 0700valid users &#x3D; pipublic &#x3D; yesavailable &#x3D; yeswritable &#x3D; yes 注意： 对于树莓派，配置文件里有一个[home]配置，共享用户的home目录，不需要的话可以删除 samba 4.5以上的版本，需要在global配置中添加 ntlm auth = yes 支持老的客户端版本的认证 共享的路径赋予777权限 添加用户 12&#x2F;&#x2F; 用户名必须是系统中已有的用户smbpasswd -a 用户名 重启 1service smbd restart 开机启动 1systemctl enable smbd","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"文件同步","slug":"软件模块/办公/文件同步","date":"2020-08-16T01:10:19.310Z","updated":"2020-08-16T01:04:15.968Z","comments":true,"path":"2020/08/16/软件模块/办公/文件同步/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%8A%9E%E5%85%AC/%E6%96%87%E4%BB%B6%E5%90%8C%E6%AD%A5/","excerpt":"","text":"工具 同步软件：FreeFileSync 12345678# 同步设置，忽略不需要同步的文件类型\\System Volume Information\\\\$Recycle.Bin\\\\RECYCLE?\\*\\desktop.ini*\\thumbs.db*\\.DS_Store*\\._* 内网穿透：n2n NAS：NanoPi或RaspberryPi，内网穿透 网络结构 存档资料 12graph LRPC--&gt;移动硬盘 12graph LR移动硬盘--&gt;老家 网盘资料(内网穿透) 12graph LRPC--&gt;老家NAS","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"办公","slug":"软件模块/办公","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%8A%9E%E5%85%AC/"}],"tags":[]},{"title":"Zookeeper","slug":"软件模块/中间件/zookeeper","date":"2020-08-16T01:10:19.309Z","updated":"2020-08-16T01:03:29.052Z","comments":true,"path":"2020/08/16/软件模块/中间件/zookeeper/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/zookeeper/","excerpt":"","text":"安装 下载解压 https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/ conf下 zoo.cfg配置文件 bin下 bash zkServer.sh start Docker 启动 集群模式1234567891011121314151617181920docker run -d --restart always --name zookeeper \\ -e ZOO_MY_ID&#x3D;1 \\ -e ZOO_SERVERS&#x3D;&#39;server.1&#x3D;0.0.0.0:2888:3888 server.2&#x3D;172.31.10.30:2888:3888 server.3&#x3D;172.31.0.237:2888:3888&#39; \\ -e ZOO_SYNC_LIMIT&#x3D;5 \\ -p 2181:2181 -p 2888:2888 -p 3888:3888 \\ zookeeper:3.4.13docker run -d --restart always --name zookeeper \\ -e ZOO_MY_ID&#x3D;2 \\ -e ZOO_SERVERS&#x3D;&#39;server.1&#x3D;172.31.1.239:2888:3888 server.2&#x3D;0.0.0.0:2888:3888 server.3&#x3D;172.31.0.237:2888:3888&#39; \\ -e ZOO_SYNC_LIMIT&#x3D;5 \\ -p 2181:2181 -p 2888:2888 -p 3888:3888 \\ zookeeper:3.4.13 docker run -d --restart always --name zookeeper \\ -e ZOO_MY_ID&#x3D;3 \\ -e ZOO_SERVERS&#x3D;&#39;server.1&#x3D;172.31.1.239:2888:3888 server.2&#x3D;172.31.10.30:2888:3888 server.3&#x3D;0.0.0.0:2888:3888&#39; \\ -e ZOO_SYNC_LIMIT&#x3D;5 \\ -p 2181:2181 -p 2888:2888 -p 3888:3888 \\ zookeeper:3.4.13","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"中间件","slug":"软件模块/中间件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[]},{"title":"","slug":"测试工具/JMeter/JMeter","date":"2020-08-16T01:10:19.293Z","updated":"2018-09-22T15:14:36.285Z","comments":true,"path":"2020/08/16/测试工具/JMeter/JMeter/","link":"","permalink":"http://ioman.top/2020/08/16/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/JMeter/JMeter/","excerpt":"","text":"安装和配置 下载 http://jmeter.apache.org/download_jmeter.cgi 下载mqtt插件https://github.com/emqtt/mqtt-jmeter/，放在 jmeter下的/lib/ext/下 linux下无桌面运行 需修改 /bin 下配置文件：jmeter.properties 1jmeterengine.nongui.port&#x3D;0 参数说明 1.&#x2F;jmeter -n -t &#x2F;home&#x2F;downloads&#x2F;jmeter&#x2F;CapellaMqtt-3.jmx -l &#x2F;home&#x2F;downloads&#x2F;jmeter&#x2F;result.jtl -h 帮助 -&gt; 打印出有用的信息并退出 -n 非 GUI 模式 -&gt; 在非 GUI 模式下运行 JMeter -t 测试文件 -&gt; 要运行的 JMeter 测试脚本文件 -l 日志文件 -&gt; 记录结果的文件 -r 远程执行 -&gt; 启动远程服务 -H 代理主机 -&gt; 设置 JMeter 使用的代理主机 -P 代理端口 -&gt; 设置 JMeter 使用的代理主机的端口号","categories":[{"name":"测试工具","slug":"测试工具","permalink":"http://ioman.top/categories/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"},{"name":"JMeter","slug":"测试工具/JMeter","permalink":"http://ioman.top/categories/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/JMeter/"}],"tags":[]},{"title":"Kafka","slug":"软件模块/中间件/kafka","date":"2020-08-16T01:10:19.293Z","updated":"2020-08-16T01:02:27.140Z","comments":true,"path":"2020/08/16/软件模块/中间件/kafka/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/kafka/","excerpt":"","text":"参考链接：https://blog.csdn.net/lblblblblzdx/article/details/80548294 安装和启动kafka的启动依赖于zookeeper 启动zookeeper容器1docker run -d --name zookeeper -p 2181:2181 -t wurstmeister&#x2F;zookeeper 启动kafka容器启动单点： 123456docker run -d --name kafka \\-p 9092:9092 \\-e KAFKA_BROKER_ID&#x3D;0 \\ -e KAFKA_ZOOKEEPER_CONNECT&#x3D;192.168.204.128:2181 \\ -e KAFKA_ADVERTISED_LISTENERS&#x3D;PLAINTEXT:&#x2F;&#x2F;192.168.204.128:9092 \\-e KAFKA_LISTENERS&#x3D;PLAINTEXT:&#x2F;&#x2F;0.0.0.0:9092 -t wurstmeister&#x2F;kafka 中间两个参数的192.168.204.128改为宿主机器的IP地址，如果不这么设置，可能会导致在别的机器上访问不到kafka 启动集群： 1234567891011121314151617181920212223docker run -d --name kafka1 \\ -e KAFKA_BROKER_ID&#x3D;1 \\ -e KAFKA_ADVERTISED_LISTENERS&#x3D;&#39;PLAINTEXT:&#x2F;&#x2F;172.31.16.78:9092&#39; \\ -e KAFKA_LISTENERS&#x3D;&#39;PLAINTEXT:&#x2F;&#x2F;0.0.0.0:9092&#39; \\ -e KAFKA_ZOOKEEPER_CONNECT&#x3D;&#39;172.31.16.145:2181,172.31.17.100:2181,172.31.18.27:2181&#39; \\ -p 9092:9092 \\ wurstmeister&#x2F;kafka:1.1.0docker run -d --name kafka2 \\ -e KAFKA_BROKER_ID&#x3D;2 \\ -e KAFKA_ADVERTISED_LISTENERS&#x3D;&#39;PLAINTEXT:&#x2F;&#x2F;172.31.16.11:9092&#39; \\ -e KAFKA_LISTENERS&#x3D;&#39;PLAINTEXT:&#x2F;&#x2F;0.0.0.0:9092&#39; \\ -e KAFKA_ZOOKEEPER_CONNECT&#x3D;&#39;172.31.16.145:2181,172.31.17.100:2181,172.31.18.27:2181&#39; \\ -p 9092:9092 \\ wurstmeister&#x2F;kafka:1.1.0docker run -d --name kafka3 \\ -e KAFKA_BROKER_ID&#x3D;3 \\ -e KAFKA_ADVERTISED_LISTENERS&#x3D;&#39;PLAINTEXT:&#x2F;&#x2F;172.31.16.238:9092&#39; \\ -e KAFKA_LISTENERS&#x3D;&#39;PLAINTEXT:&#x2F;&#x2F;0.0.0.0:9092&#39; \\ -e KAFKA_ZOOKEEPER_CONNECT&#x3D;&#39;172.31.16.145:2181,172.31.17.100:2181,172.31.18.27:2181&#39; \\ -p 9092:9092 \\ wurstmeister&#x2F;kafka:1.1.0 常用命令 进入kafka容器的命令行1docker exec -ti kafka &#x2F;bin&#x2F;bash 进入kafka所在目录1cd opt&#x2F;kafka_2.12-1.1.0&#x2F; 创建topic1.&#x2F;bin&#x2F;kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic mykafka 启动发送客户端1.&#x2F;bin&#x2F;kafka-console-producer.sh --broker-list localhost:9092 --topic mykafka 启动接收客户端1.&#x2F;bin&#x2F;kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic mykafka --from-beginning","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"中间件","slug":"软件模块/中间件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[]},{"title":"Emq","slug":"软件模块/中间件/emq","date":"2020-08-16T01:10:19.293Z","updated":"2020-08-16T01:02:27.214Z","comments":true,"path":"2020/08/16/软件模块/中间件/emq/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/emq/","excerpt":"","text":"配置文件 允许未匹配到认证的用户通过 12## Value: true | falsemqtt.allow_anonymous &#x3D; true 允许未匹配到访问规则的主题通过 12## Value: allow | denymqtt.acl_nomatch &#x3D; allow 认证方式MySQL插件用户名密码方式适合少量用户，不依赖外部组件 开启emq_auth_username插件 进入容器内部，在/opt/emqttd/bin下执行./emqttd_ctl users list|add|del，即可查看、添加、删除用户。 如果添加访问规则，在/opt/emqttd/etc/acl.conf下添加。 系统定义的主题分组订阅上下线消息 connect12$SYS&#x2F;brokers&#x2F;emq1@172.31.19.124&#x2F;clients&#x2F;mqttjs_c7aaa20951&#x2F;disconnected&#123;&quot;clientid&quot;:&quot;mqttjs_c7aaa20951&quot;,&quot;username&quot;:&quot;Server.shadow&quot;,&quot;reason&quot;:&quot;normal&quot;,&quot;ts&quot;:1553066741&#125; disconnect12$SYS&#x2F;brokers&#x2F;emq1@172.31.19.124&#x2F;clients&#x2F;mqttjs_c7aaa20951&#x2F;connected&#123;&quot;clientid&quot;:&quot;mqttjs_c7aaa20951&quot;,&quot;username&quot;:&quot;Server.shadow&quot;,&quot;ipaddress&quot;:&quot;192.168.7.89&quot;,&quot;clean_sess&quot;:true,&quot;protocol&quot;:4,&quot;connack&quot;:0,&quot;ts&quot;:1553066706&#125; Docker 启动 集群模式 端口6000-6999用于集群间通信 每个节点指定 EMQ_NAME, EMQ_HOST, EMQ_NODE__NAME 第1个节点不用JOIN_CLUSTER，剩下的指定 EMQ_JOIN_CLUSTER 集群模式注意打开防火墙和集群间通信端口12345678910111213141516171819202122docker run -d --name emq1 -p 18083:18083 -p 1883:1883 -p 8083:8083 -p 8883:8883 -p 8084:8084 -p 4369:4369 -p 6000-6999:6000-6999 \\ --net&#x3D;host \\ -e EMQ_NAME&#x3D;&quot;emq1&quot; \\ -e EMQ_HOST&#x3D;&quot;192.168.9.1&quot; \\ -e EMQ_NODE__NAME&#x3D;&quot;emq1@192.168.9.1&quot; \\ emqttd-docker-v2.3.11docker run -d --name emq2 \\-p 18083:18083 -p 1883:1883 -p 8083:8083 -p 8883:8883 -p 8084:8084 -p 4369:4369 -p 6000-6999:6000-6999 \\ -e EMQ_NAME&#x3D;&quot;emq2&quot; \\ -e EMQ_HOST&#x3D;&quot;192.168.9.2&quot; \\ -e EMQ_NODE__NAME&#x3D;&quot;emq2@192.168.9.2&quot; \\ -e EMQ_JOIN_CLUSTER&#x3D;&quot;emq1@@192.168.9.1&quot; \\ emqttd-docker-v2.3.11docker run -d --name emq3 \\ -p 18083:18083 -p 1883:1883 -p 8083:8083 -p 8883:8883 -p 8084:8084 -p 4369:4369 -p 6000-6999:6000-6999 \\ -e EMQ_NAME&#x3D;&quot;emq3&quot; \\ -e EMQ_HOST&#x3D;&quot;192.168.9.3&quot; \\ -e EMQ_NODE__NAME&#x3D;&quot;emq3@192.168.9.3&quot; \\ -e EMQ_JOIN_CLUSTER&#x3D;&quot;emq1@192.168.9.1&quot; \\ emqttd-docker-v2.3.11 集群报错异常 启动后把监控脚本异常退出时间改长 配置文件日志级别改为debug","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"中间件","slug":"软件模块/中间件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[]},{"title":"Keepalived","slug":"软件模块/中间件/keepalived","date":"2020-08-16T01:10:19.293Z","updated":"2020-08-16T01:02:42.605Z","comments":true,"path":"2020/08/16/软件模块/中间件/keepalived/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/keepalived/","excerpt":"","text":"参考资料https://blog.csdn.net/mofiu/article/details/76644012","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"中间件","slug":"软件模块/中间件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[]},{"title":"Nginx","slug":"软件模块/中间件/nginx","date":"2020-08-16T01:10:19.293Z","updated":"2020-08-16T01:02:59.937Z","comments":true,"path":"2020/08/16/软件模块/中间件/nginx/","link":"","permalink":"http://ioman.top/2020/08/16/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/nginx/","excerpt":"","text":"说明7层负载均衡工具，主要用于http(s)请求转发，默认也只支持http(s) 配置 路径 /etc/nginx/ 树莓派版本的nginx和服务器版本的可能不太一样，首先看nginx.conf 的http里面include了哪些对象 搭建文件服务器参考https://blog.csdn.net/datadev_sh/article/details/83819791 请求转发-HTTPconf.d/xxx.conf 1234567891011server &#123; listen 80; server_name file.micro-code.com; location &#x2F; &#123; proxy_redirect off; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http:&#x2F;&#x2F;172.17.0.6:9000; &#125;&#125; 请求最大数据大小文件: nginx_conf 123http &#123; client_max_body_size 100m;&#125; 表示最大100M 请求转发-TCP/UDP编辑/etc/nginx.conf 12345678910111213141516171819202122events &#123; worker_connections 1024;&#125;stream &#123; # 如果需要多个服务负载均衡或者主备，需要加这个upstream upstream ov1 &#123; server 192.168.1.231:9194; server 192.168.1.232:9194 backup; # backup表示备用服务器 &#125; server &#123; listen 9194; # 默认tcp，udp的话要写listen 9194 udp;# proxy_responses 1; # udp要加这个参数，响应包才能回去 proxy_timeout 20s; proxy_buffer_size 512k; proxy_upload_rate 204800; # 上行速率 proxy_download_rate 204800; # 下行速率 proxy_pass 127.0.0.1:1194; # 转发位置，直接写地址端口或者上面定义的upstream名称 &#125;&#125;","categories":[{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"中间件","slug":"软件模块/中间件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/"}],"tags":[]},{"title":"","slug":"版本管理/git/基本命令","date":"2020-08-16T01:10:19.278Z","updated":"2019-08-29T12:53:03.787Z","comments":true,"path":"2020/08/16/版本管理/git/基本命令/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/","excerpt":"","text":"远程仓库地址 添加远程仓库地址1git remote add origin http:&#x2F;&#x2F;xx.xx.xx.xx 查看远程仓库地址1234git remote showgit remote show [远程名称]&#96;&#96;&#96; - 修改远程仓库地址 git remote set-url origin http://xx.xx.xx.xx1- 删除远程仓库地址 git remote rm origin12#### 更新 git pull12&#96;&#96;&#96;git checkout -b feature&#x2F;CAPELLA-401 remotes&#x2F;origin&#x2F;feature&#x2F;CAPELLA-401 压缩提交命令：git rebase使用： git log 查看提交记录，确定合并几个提交 git rebase -i HEAD~4 将4条提交记录压缩 弹出文本编辑窗口，修改第2-4行的第一个单词pick为squash，保存退出 弹出文本编辑窗口，修改提交记录文字描述，保存退出 标签将标签推送到远程仓库 1git push origin --tags 查看提交日志12git loggit log --pretty&#x3D;oneline 版本回退12345678&#x2F;&#x2F; 回退1个提交git reset --hard HEAD^&#x2F;&#x2F; 回退100个提交git reset --hard HEAD~100&#x2F;&#x2F; 回退到某个版本号git reset --hard 版本号 误操作恢复12345&#x2F;&#x2F; 查看之前的操作git reflog&#x2F;&#x2F; 恢复到某个操作git reset --hard 98abc5a","categories":[{"name":"版本管理","slug":"版本管理","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"},{"name":"git","slug":"版本管理/git","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/"}],"tags":[]},{"title":"Svn","slug":"版本管理/svn/Svn","date":"2020-08-16T01:10:19.278Z","updated":"2020-08-16T00:57:29.293Z","comments":true,"path":"2020/08/16/版本管理/svn/Svn/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/svn/Svn/","excerpt":"","text":"参考网址http://www.linuxidc.com/Linux/2015-01/111748.htmhttp://www.blogjava.net/jasmine214--love/archive/2011/01/12/342839.html 列表1svn list svn:&#x2F;&#x2F;192.168.231.1&#x2F;SVNHome 检出1svn checkout svn:&#x2F;&#x2F;192.168.231.1&#x2F;SVNHome 更新12svn updatesvn update -r m(某一版本号) 添加文件到版本管理1svn add (filename) 提交1svn commit -m &quot;text log&quot; 删除文件1svn del (filename) 中间有空格时可以加引号解决1&quot;svn:&#x2F;&#x2F;192.168.8.202&#x2F;terminal&#x2F;04.Background Applications&#x2F;04.Test Tools&#x2F;解析模块本地测试工具&quot; 状态svn status ?：不在svn的控制中 M：内容被修改 C：发生冲突 A：预定加入到版本库 K：被锁定 查看版本更新记录svn log","categories":[{"name":"版本管理","slug":"版本管理","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"},{"name":"svn","slug":"版本管理/svn","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/svn/"}],"tags":[]},{"title":"","slug":"版本管理/git/分支","date":"2020-08-16T01:10:19.262Z","updated":"2019-12-01T16:03:36.766Z","comments":true,"path":"2020/08/16/版本管理/git/分支/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/%E5%88%86%E6%94%AF/","excerpt":"","text":"分支新建本地分支 1git branch dev 新建空白分支 1 删除分支 1git branch -d dev","categories":[{"name":"版本管理","slug":"版本管理","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"},{"name":"git","slug":"版本管理/git","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/"}],"tags":[]},{"title":"","slug":"版本管理/git/压缩提交","date":"2020-08-16T01:10:19.262Z","updated":"2019-09-04T12:50:28.036Z","comments":true,"path":"2020/08/16/版本管理/git/压缩提交/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/%E5%8E%8B%E7%BC%A9%E6%8F%90%E4%BA%A4/","excerpt":"","text":"安装压缩提交扩展命令12345sudo mkdir -p &#x2F;usr&#x2F;local&#x2F;binsudo curl -s http:&#x2F;&#x2F;products.sunseaiot.cn&#x2F;development&#x2F;git&#x2F;git-extra&#x2F;git-commit-squash -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git-commit-squashsudo chmod 755 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git-commit-squashgit config --global alias.cs commit-squash 用法1git commit-squash --fetch --message &quot;fix(service,dao): CAPELLA-24, 修复用户按地区查询的过滤条件。&quot; 脚本1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#!/usr/bin/env bash# Author: Lixin Chen &lt;chenlixin@sunseagroup.com&gt;# Version: 1.1.0# Data: 2018-07-11T20:00:00+08:00usage() &#123; echo &quot;usage: git commit-squash [--repo &lt;repository&gt;] [--branch &lt;branch&gt;] [--fetch] --message &lt;message&gt;&quot; echo &quot;&quot; echo &quot; -r, --repo &lt;repository&gt; remote repository&quot; echo &quot; -b, --branch &lt;branch&gt; squash base branch&quot; echo &quot; -f, --fetch fetch remote repository before squash commits&quot; echo &quot; -m, --message &lt;message&gt; commit message&quot;&#125;squash() &#123; local repository=&quot;$1&quot;; shift local branch=&quot;$1&quot;; shift local fetch=&quot;$1&quot;; shift local message=&quot;$1&quot;; shift if [ &quot;$&#123;fetch&#125;&quot; != &quot;true&quot; ] || git fetch &quot;$&#123;repository&#125;&quot;; then git merge --quiet --message &quot;Merge &#x27;$&#123;repository&#125;/$&#123;branch&#125;&#x27; into $(git rev-parse --abbrev-ref HEAD)&quot; &quot;$&#123;repository&#125;/$&#123;branch&#125;&quot; &amp;&amp; \\ git reset --quiet --soft &quot;$&#123;repository&#125;/$&#123;branch&#125;&quot; &amp;&amp; \\ git commit --message &quot;$&#123;squash_message&#125;&quot; fi&#125;squash_repository=&quot;origin&quot;squash_branch=&quot;master&quot;squash_fetch=&quot;false&quot;squash_message=&quot;&quot;while test $# != 0; do case &quot;$1&quot; in -r|--repo) shift squash_repository=&quot;$1&quot; ;; -b|--branch) shift squash_branch=&quot;$1&quot; ;; -f|--fetch) squash_fetch=&quot;true&quot; ;; -m|--message) shift squash_message=&quot;$1&quot; ;; -h|--help) shift usage &amp;&amp; exit 0 ;; --) shift break ;; esac shiftdoneif [ -n &quot;$&#123;squash_message&#125;&quot; ]; then squash &quot;$&#123;squash_repository&#125;&quot; &quot;$&#123;squash_branch&#125;&quot; &quot;$&#123;squash_fetch&#125;&quot; &quot;$&#123;squash_message&#125;&quot;else usage &amp;&amp; exit 1fi","categories":[{"name":"版本管理","slug":"版本管理","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"},{"name":"git","slug":"版本管理/git","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/"}],"tags":[]},{"title":"","slug":"版本管理/git/使用优化","date":"2020-08-16T01:10:19.246Z","updated":"2020-08-15T13:02:02.122Z","comments":true,"path":"2020/08/16/版本管理/git/使用优化/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/%E4%BD%BF%E7%94%A8%E4%BC%98%E5%8C%96/","excerpt":"","text":"修改Git-Bash前缀编辑配置文件win10位于安装目录C:\\Program Files\\Git\\etc\\profile.d\\git-prompt.sh找到PS1相关的逻辑，删除不需要的前缀 解决在intellij的bash里中文乱码git的安装路径下etc文件下有个 bash.bashrc 文件，在这个文件末尾追加： 12export LANG&#x3D;&quot;zh_CN.UTF-8&quot;export LC_ALL&#x3D;&quot;zh_CN.UTF-8&quot;","categories":[{"name":"版本管理","slug":"版本管理","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"},{"name":"git","slug":"版本管理/git","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/"}],"tags":[]},{"title":"fork并同步他人仓库","slug":"版本管理/git/fork 并同步他人仓库","date":"2020-08-16T01:10:19.246Z","updated":"2020-08-16T00:57:01.886Z","comments":true,"path":"2020/08/16/版本管理/git/fork 并同步他人仓库/","link":"","permalink":"http://ioman.top/2020/08/16/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/fork%20%E5%B9%B6%E5%90%8C%E6%AD%A5%E4%BB%96%E4%BA%BA%E4%BB%93%E5%BA%93/","excerpt":"","text":"fork同步参考： https://blog.csdn.net/joelovegreen/article/details/42913163 https://www.jianshu.com/p/d73dcee2d907 新建自己的仓库 在github或码云上新建自己的同步仓库 git clone 到本地 配置原始仓库remote使用 git remote -v 查看远程状态 123git remote -vorigin https:&#x2F;&#x2F;github.com&#x2F;YOUR_USERNAME&#x2F;YOUR_FORK.git (fetch)origin https:&#x2F;&#x2F;github.com&#x2F;YOUR_USERNAME&#x2F;YOUR_FORK.git (push) 添加一个原始仓库的remote 12# upstream 可以改成别的名字git remote add upstream https:&#x2F;&#x2F;github.com&#x2F;ORIGINAL_OWNER&#x2F;ORIGINAL_REPOSITORY.git 再次查看状态确认是否配置成功。 12345git remote -vorigin https:&#x2F;&#x2F;github.com&#x2F;YOUR_USERNAME&#x2F;YOUR_FORK.git (fetch)origin https:&#x2F;&#x2F;github.com&#x2F;YOUR_USERNAME&#x2F;YOUR_FORK.git (push)upstream https:&#x2F;&#x2F;github.com&#x2F;ORIGINAL_OWNER&#x2F;ORIGINAL_REPOSITORY.git (fetch)upstream https:&#x2F;&#x2F;github.com&#x2F;ORIGINAL_OWNER&#x2F;ORIGINAL_REPOSITORY.git (push) fork原始仓库获取原始仓库上的更新 1git fetch upstream 原始仓库合并到自己分支查看原始仓库都有哪些分支 1git branch -a merge master 分支 1git merge upstream&#x2F;master 在自己的仓库上创建相应的分支 1git checkout -b dev upstream&#x2F;dev 推送自己的分支12git pushgit push origin dev","categories":[{"name":"版本管理","slug":"版本管理","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"},{"name":"git","slug":"版本管理/git","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/"}],"tags":[]},{"title":"","slug":"安全加密/证书工具/OpenSSL","date":"2020-08-16T01:10:19.231Z","updated":"2020-08-15T13:02:02.122Z","comments":true,"path":"2020/08/16/安全加密/证书工具/OpenSSL/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/%E8%AF%81%E4%B9%A6%E5%B7%A5%E5%85%B7/OpenSSL/","excerpt":"","text":"","categories":[{"name":"安全加密","slug":"安全加密","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/"},{"name":"证书工具","slug":"安全加密/证书工具","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/%E8%AF%81%E4%B9%A6%E5%B7%A5%E5%85%B7/"}],"tags":[]},{"title":"","slug":"安全加密/证书工具/KeyTool","date":"2020-08-16T01:10:19.231Z","updated":"2020-08-15T13:02:02.122Z","comments":true,"path":"2020/08/16/安全加密/证书工具/KeyTool/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/%E8%AF%81%E4%B9%A6%E5%B7%A5%E5%85%B7/KeyTool/","excerpt":"","text":"-list 显示密钥库中的证书信息1keytool -list -v -keystore trustStore1.jks 查看.pem证书里的详细内容1keytool -printcert -file certificate.pem 使用openssl查看证书内容1openssl x509 -in cacert.pem -noout -text","categories":[{"name":"安全加密","slug":"安全加密","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/"},{"name":"证书工具","slug":"安全加密/证书工具","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/%E8%AF%81%E4%B9%A6%E5%B7%A5%E5%85%B7/"}],"tags":[]},{"title":"","slug":"安全加密/认证与证书介绍","date":"2020-08-16T01:10:19.215Z","updated":"2018-07-10T14:30:33.054Z","comments":true,"path":"2020/08/16/安全加密/认证与证书介绍/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/%E8%AE%A4%E8%AF%81%E4%B8%8E%E8%AF%81%E4%B9%A6%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"证书里的内容(图片) 版本号(目前是x509v3) 证书序列号 签名算法、密钥算法 所有者的公钥 所有者的信息(CN=所有者名称，OU=所有者组织单位名称，O=所有者组织名称，L=城市或区域，ST=省，C=国家代码)(https证书截图) 签发机构的信息(同上) 有效时间 扩展项(重要) 签名 证书里的签名 对证书里的内容(公钥、所有者、签发机构、有效期等)计算摘要 用签发机构的私钥对摘要加密，形成的密文就是签名 证书扩展项 BC = 基本约束(ca:true) 是否可以为下一级颁发证书 KU = key useage “密钥用法”, “增强型密钥用法” 颁发机构密钥标识和使用者密钥标识 CRL分发点和颁发机构信息访问 证书验证流程(图) 保存根证书，自己的公私钥，自己的证书链。证书链握手的时候传给对方 多级证书链测试(通过) root -&gt; caa0 -&gt; caa1 -&gt; caa2 -&gt; client 要注意中间证书的扩展参数 HTTPS 证书分类: 域名型证书(DV)、组织型证书(OV)、增强型证书(EV) 证书失效 拥有合法证书的钓鱼网站(中间人攻击) 证书讨论点 设备端证书失效问题","categories":[{"name":"安全加密","slug":"安全加密","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/"}],"tags":[]},{"title":"","slug":"安全加密/证书工具/Easy-RSA","date":"2020-08-16T01:10:19.215Z","updated":"2020-08-15T13:02:02.106Z","comments":true,"path":"2020/08/16/安全加密/证书工具/Easy-RSA/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/%E8%AF%81%E4%B9%A6%E5%B7%A5%E5%85%B7/Easy-RSA/","excerpt":"","text":"安装","categories":[{"name":"安全加密","slug":"安全加密","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/"},{"name":"证书工具","slug":"安全加密/证书工具","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/%E8%AF%81%E4%B9%A6%E5%B7%A5%E5%85%B7/"}],"tags":[]},{"title":"","slug":"安全加密/本地生成密钥","date":"2020-08-16T01:10:19.200Z","updated":"2019-07-25T14:03:43.574Z","comments":true,"path":"2020/08/16/安全加密/本地生成密钥/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/%E6%9C%AC%E5%9C%B0%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5/","excerpt":"","text":"本地生成密钥1ssh-keygen -t rsa -C &quot;myname@location&quot;","categories":[{"name":"安全加密","slug":"安全加密","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/"}],"tags":[]},{"title":"","slug":"安全加密/Jumpserver - 开源堡垒机","date":"2020-08-16T01:10:19.184Z","updated":"2019-03-05T14:37:15.869Z","comments":true,"path":"2020/08/16/安全加密/Jumpserver - 开源堡垒机/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/Jumpserver%20-%20%E5%BC%80%E6%BA%90%E5%A0%A1%E5%9E%92%E6%9C%BA/","excerpt":"","text":"跳转机器命令p 显示有权限的主机1 登录主机sudo su - 切换到root","categories":[{"name":"安全加密","slug":"安全加密","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/"}],"tags":[]},{"title":"","slug":"安全加密/ssh","date":"2020-08-16T01:10:19.184Z","updated":"2019-12-29T12:33:47.515Z","comments":true,"path":"2020/08/16/安全加密/ssh/","link":"","permalink":"http://ioman.top/2020/08/16/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/ssh/","excerpt":"","text":"ssh原理http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html https://marskid.net/2018/02/05/how-to-verify-ssh-public-key-fingerprint/ 命令 获取服务器公钥 1ssh-keyscan -t ECDSA -p 22 127.0.0.1 计算公钥指纹 123ssh-keygen -E sha256 -lf &#x2F;etc&#x2F;ssh&#x2F;ssh_host_ecdsa_key.pubssh-keygen -E md5 -lf &#x2F;etc&#x2F;ssh&#x2F;ssh_host_ecdsa_key.pub ssh-copy-id 将本机的公钥复制到远程机器的authorized_keys文件中","categories":[{"name":"安全加密","slug":"安全加密","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/"}],"tags":[]},{"title":"","slug":"OS/Windows/常用命令","date":"2020-08-16T01:10:19.168Z","updated":"2020-08-15T13:02:02.106Z","comments":true,"path":"2020/08/16/OS/Windows/常用命令/","link":"","permalink":"http://ioman.top/2020/08/16/OS/Windows/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"端口转发使用netsh 添加端口转发1netsh interface portproxy add v4tov4 listenport&#x3D;4000 listenaddress&#x3D;127.0.0.1 connectport&#x3D;4000 connectaddress&#x3D;172.31.217.198 删除端口转发1netsh interface portproxy del v4tov4 listenport&#x3D;4000 listenaddress&#x3D;127.0.0.1 查看已存在的端口映射123netsh interface portproxy show v4tov4# 可以通过命令 netstat -ano|find 4000 查看端口是否已在监听# telnet 127.0.0.1 4000 测试端口是否连通 查看路由路径tracert www.baidu.com","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"Windows","slug":"OS/Windows","permalink":"http://ioman.top/categories/OS/Windows/"}],"tags":[]},{"title":"","slug":"OS/Ubuntu/软件安装","date":"2020-08-16T01:10:19.168Z","updated":"2019-04-21T14:43:56.955Z","comments":true,"path":"2020/08/16/OS/Ubuntu/软件安装/","link":"","permalink":"http://ioman.top/2020/08/16/OS/Ubuntu/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/","excerpt":"","text":"apt-get apt-get update:更新安装列表 apt-get upgrade:升级软件 apt-get install software_name :安装软件 apt-get –purge remove software_name :卸载软件及其配置 apt-get autoremove software_name:卸载软件及其依赖的安装包 dpkg –list:罗列已安装软件","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"Ubuntu","slug":"OS/Ubuntu","permalink":"http://ioman.top/categories/OS/Ubuntu/"}],"tags":[]},{"title":"","slug":"OS/Ubuntu/设置开机启动命令","date":"2020-08-16T01:10:19.153Z","updated":"2019-11-30T09:57:23.563Z","comments":true,"path":"2020/08/16/OS/Ubuntu/设置开机启动命令/","link":"","permalink":"http://ioman.top/2020/08/16/OS/Ubuntu/%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"Ubuntu 设置rc.local开机启动命令/脚本一般有两种方法： 方法1：rc.local脚本rc.local脚本是一个Ubuntu开机后会自动执行的脚本，我们可以在该脚本内添加命令行指令。 该脚本位于/etc/路径下，需要root权限才能修改。 注意： rc.local脚本里面启动的用户默认为root权限。 命令或脚本需要添加在exit 0之前 例如在rc.local中添加mkdir /root/test1234, 表示在开机启动后自动在/root/下创建一个test1234目录 1234567891011121314151617181920212223242526#!&#x2F;bin&#x2F;sh -e## rc.local## This script is executed at the end of each multiuser runlevel.# Make sure that the script will &quot;exit 0&quot; on success or any other# value on error.## In order to enable or disable this script just change the execution# bits.## By default this script does nothing.&#x2F;usr&#x2F;local&#x2F;bin&#x2F;gen-friendlyelec-release. &#x2F;etc&#x2F;friendlyelec-releaseif [ ! -f &#x2F;etc&#x2F;firstuse ]; then &#x2F;bin&#x2F;echo $&#123;BOARD&#125; &gt; &#x2F;etc&#x2F;hostname &#x2F;bin&#x2F;sed -i &quot;s&#x2F;\\(127.0.1.1\\s*\\).*&#x2F;\\1$&#123;BOARD&#125;&#x2F;g&quot; &#x2F;etc&#x2F;hosts &#x2F;bin&#x2F;hostname $&#123;BOARD&#125; &#x2F;bin&#x2F;echo &quot;0&quot; &gt; &#x2F;etc&#x2F;firstusefi. &#x2F;usr&#x2F;bin&#x2F;setqt4env&#x2F;usr&#x2F;bin&#x2F;lcd2usb_print &quot;CPU: &#123;&#123;CPU&#125;&#125;&quot; &quot;Mem: &#123;&#123;MEM&#125;&#125;&quot; &quot;IP: &#123;&#123;IP&#125;&#125;&quot; &quot;LoadAvg: &#123;&#123;L$#&#x2F;opt&#x2F;QtE-Demo&#x2F;run.sh&amp;mkdir &#x2F;root&#x2F;test1234exit 0 方法2：update-rc.d增加开机启动服务在Ubuntu系统中添加一个开机启动脚本，操作如下： 1. 新建脚本文件start_test.sh 代码如下：123456789101112#!&#x2F;bin&#x2F;sh### BEGIN INIT INFO# Provides: start_test.sh# Required-Start: $all# Required-Stop: $all# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: starts the start_test.sh# Description: starts start_test.sh# for security.### END INIT INFOmkdir &#x2F;root&#x2F;start_test456 INIT INFO描述了该脚本为哪个应用程序提供服务。还说明了运行该应用程序之前需要先运行哪些应用程序，例如这里写的$all,表示该程序将在其他依赖程序都已经启动的情况下才启动。 init脚本中最重要的描述可能就是Default-Start和Default-Stop，这里描述了该脚本在Linux系统中的运行级别，运行级别的定义如下： level 0：停机 level 1 ：单用户 level 2&amp;3 ：多用户 level 4 : 用户自定义 level 5：系统一般运行状态 level 6：重启Short-Description以及Description填写服务描述 2. 设置权限1sudo chmod +x start_test.sh 3. 拷贝到/etc/init.d/下1sudo cp .&#x2F;start_test.sh &#x2F;etc&#x2F;init.d&#x2F; 4. 将脚本添加到启动脚本123# 执行如下指令，在这里90表明一个优先级，越高表示执行的越晚cd &#x2F;etc&#x2F;init.d&#x2F;sudo update-rc.d start_test.sh defaults 90 5. 移除Ubuntu开机脚本12cd &#x2F;etc&#x2F;init.dsudo update-rc.d -f start_test.sh remove 6. 通过sysv-rc-conf来管理上面启动服务的启动级别等1sudo sysv-rc-conf 7. update-rc.d的详细参数使用update-rc.d命令需要指定脚本名称和一些参数，它的格式是这样的（需要在 root 权限下）： 123456update-rc.d [-n] [-f] &lt;basename&gt; removeupdate-rc.d [-n] &lt;basename&gt; defaultsupdate-rc.d [-n] &lt;basename&gt; disable|enable [S|2|3|4|5]update-rc.d &lt;basename&gt; start|stop &lt;NN&gt; &lt;runlevels&gt;-n: not really-f: force 其中： disable|enable：代表脚本还在/etc/init.d中，并设置当前状态是手动启动还是自动启动。 start|stop：代表脚本还在/etc/init.d中，开机，并设置当前状态是开始运行还是停止运行。（启用后可配置开始运行与否） NN：是一个决定启动顺序的两位数字值。（例如90大于80，因此80对应的脚本先启动或先停止） runlevels：则指定了运行级别。 实例： 添加一个新的启动脚本sample_init_script，并且指定为默认启动顺序、默认运行级别（注意：首先要有实际的文件存在于/etc/init.d，即若文件/etc/init.d/sample_init_script不存在，则该命令不会执行）1update-rc.d sample_init_script defaults 上一条命令等效于（中间是一个英文句点符号）：1update-rc.d sample_init_script start 20 2 3 4 5 . stop 20 0 1 6 安装一个启动脚本sample_init_script，指定默认运行级别，但启动顺序为50：1update-rc.d sample_init_script defaults 50 安装两个启动脚本A、B，让A先于B启动，后于B停止：12update-rc.d A 10 40update-rc.d B 20 30 删除一个启动脚本sample_init_script，如果脚本不存在则直接跳过：1update-rc.d -f sample_init_script remove 这一条命令实际上做的就是一一删除所有位于/etc/rcX.d目录下指向/etc/init.d中sample_init_script的链接（可能存在多个链接文件），update-rc.d只不过简化了这一步骤。 禁止Apache/MySQL相关组件开机自启：12update-rc.d -f apache2 removeupdate-rc.d -f mysql remove 8、服务的启动停止状态通过service，比如 1234sudo service xxx statussudo service xxx startsudo service xxx stopsudo service xxx restart 9. 查看全部服务列表sudo service –status-all","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"Ubuntu","slug":"OS/Ubuntu","permalink":"http://ioman.top/categories/OS/Ubuntu/"}],"tags":[]},{"title":"","slug":"OS/Ubuntu/KVM虚拟机安装","date":"2020-08-16T01:10:19.122Z","updated":"2020-08-15T13:02:02.091Z","comments":true,"path":"2020/08/16/OS/Ubuntu/KVM虚拟机安装/","link":"","permalink":"http://ioman.top/2020/08/16/OS/Ubuntu/KVM%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/","excerpt":"","text":"安装参考：https://www.sysgeek.cn/install-configure-kvm-ubuntu-18-04/ 步骤步骤1：验证Linux系统是否支持硬件虚拟化可以执行如下命令验证Linux系统是否支持硬件虚拟化： 123egrep -c &#39;(vmx|svm)&#39; &#x2F;proc&#x2F;cpuinfo# 如果输出大于 0，则表示系统支持硬件虚拟化。否则请重启系统，然后BIOS设置中启用 VT技术 请使用以下命令安装kvm-ok实用程序，它用于确定服务器是否能够运行硬件加速的KVM 虚拟机： 1234sudo apt install cpu-checker# 运行 kvm-ok 命令并验证输出sudo kvm-ok 步骤2：安装KVM及其所需的软件包请运行以下命令安装 KVM 及其依赖项： 12apt updateapt install qemu qemu-kvm libvirt-bin bridge-utils virt-manager 如果libvirt-bin报错，执行下面这个: 1apt install qemu qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virt-manager 成功安装上述软件包后，登录的本地用户将自动添加到libvirtd组中。 步骤3：启动并启用libvirtd服务当我们在 Ubuntu 18.04 LTS 中安装 qemu 和 libvirtd 软件包时，将会自动启动并启用 libvirtd 服务。 如果 libvirtd 服务没按预期启动或启用，执行以下命令 12345sudo service libvirtd startsudo update-rc.d libvirtd enable# 验证 libvirtd 服务的状态：service libvirtd status 步骤4：为KVM虚拟机配置网桥KVM 虚拟机需要通过网桥才能访问 Host 主机或访问网络，所以在安装好之后需要先配置网桥。 Ubuntu18.04的网络由netplan实用程序进行管理，在安装Ubuntu18.04系统时就会自动创建 /etc/netplan/50-cloud-init.yaml 文件来配置静态IP和网络，系统会通过 netplan 来引用此文件。 下面我们需要通过 Nano 或 vi 来编辑 /etc/netplan/50-cloud-init.yaml 配置文件： 123456789101112131415network: version: 2 ethernets: ens33: dhcp4: no dhcp6: no bridges: br0: interfaces: [ens33] dhcp4: no addresses: [192.168.1.170&#x2F;24] gateway4: 192.168.1.1 nameservers: addresses: [192.168.1.1] 我将 Linux 的静态 IP 地址添加到了网桥 br0，并将 ens33 网卡挂到了网桥 br0 下。配置文件中的网桥 IP、网关和 NS 地址按实际情况进行配置。 配置文件更改完成后，请执行如下命令应用更改： 1sudo netplan apply 现在使用以下命令验证网桥状态： 12sudo networkctl status -aifconfig 步骤5：创建KVM虚拟机创建 KVM 虚拟机的方式一共有 2 种： virt-manager（GUI 实用程序） virt-install 命令（CLI 实用程序） 使用virt-manager创建虚拟机要使用 virt-manager 工具创建虚拟机，可以在「终端」中执行如下命令打开： 1sudo virt-manager 使用virt-install命通过CLI创建虚拟机如果您配置的是 Ubuntu 18.04 Server，当然就需要类似使用以下 virt-install 命令从终端为 KVM 创建 VM 虚拟机。 1sudo virt-install -n Sysgeek-Server --description &quot;Test VM for Sysgeek&quot; --os-type&#x3D;Linux --os-variant&#x3D;rhel7 --ram&#x3D;1096 --vcpus&#x3D;1 --disk path&#x3D;&#x2F;var&#x2F;lib&#x2F;libvirt&#x2F;images&#x2F; sgserver.img,bus&#x3D;virtio,size&#x3D;10 --network bridge:br0 --graphics none --location &#x2F;home&#x2F;billyfu&#x2F;rhel-server-7.3-x86_64-dvd.iso --extra-args console&#x3D;ttyS0 请根据您的设置替换 VM 名称、描述，ISO 文件的位置和网桥信息。 步骤6：配置虚拟机网络如果虚拟机启动后无法上网，可能是默认网卡或默认路由配置的问题。 123456789101112131415# 启动网卡ifconfig eth0 updhclient eth0# 查看路由route -n# 设置默认网关route add default gw 192.168.10.1# 把发送给192.168.10.0网段的IP包交给eth0转发route add -net 192.168.10.0 netmask 255.255.255.0 dev eth0# 删除route del -net 192.168.10.0 netmask 255.255.255.0 删除虚拟网卡 123ifconfig virbr0 downbrctl delbr virbr0systemctl disable libvirtd.service 修改默认网关 1234567# 即时生效 ：route add default gw 192.168.1.1# 重启生效： vim &#x2F;etc&#x2F;sysconfig&#x2F;network增加或修改下面一行GATEWAY&#x3D;192.168.1.1","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"Ubuntu","slug":"OS/Ubuntu","permalink":"http://ioman.top/categories/OS/Ubuntu/"}],"tags":[]},{"title":"","slug":"OS/OpenWRT/软件安装","date":"2020-08-16T01:10:19.106Z","updated":"2020-08-15T13:02:02.091Z","comments":true,"path":"2020/08/16/OS/OpenWRT/软件安装/","link":"","permalink":"http://ioman.top/2020/08/16/OS/OpenWRT/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/","excerpt":"","text":"添加软件源参考：https://joybean.org/blog/2018/02/14/configure-router-for-transparent-proxy-by-using-openwrt-and-shadowsocks/ vi /etc/opkg/customfeeds.conf 增加 12src&#x2F;gz openwrt_dist http:&#x2F;&#x2F;openwrt-dist.sourceforge.net&#x2F;packages&#x2F;base&#x2F;arm_cortex-a9src&#x2F;gz openwrt_dist_luci http:&#x2F;&#x2F;openwrt-dist.sourceforge.net&#x2F;packages&#x2F;luci","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"OpenWRT","slug":"OS/OpenWRT","permalink":"http://ioman.top/categories/OS/OpenWRT/"}],"tags":[]},{"title":"","slug":"OS/MacOS/MacOS","date":"2020-08-16T01:10:19.090Z","updated":"2019-11-30T09:57:23.410Z","comments":true,"path":"2020/08/16/OS/MacOS/MacOS/","link":"","permalink":"http://ioman.top/2020/08/16/OS/MacOS/MacOS/","excerpt":"","text":"常用快捷键 截图 Cmd + Shift + 3，Cmd + Shift + 4 访问共享网盘(SMB)：在Finder下，Cmd + k 锁屏：command + ctrl + q 常用软件研发类 redis-desktop-manager：redis客户端 DataGrip：数据库管理 Wireshark：抓包工具 ZOC7：远程连接客户端 IntelliJ：java开发ide Microsoft-Remote-Desktop：windows远程桌面连接 MQTT.fx：MQTT客户端 Qt：C++桌面应用开发 生活类： zoom：视频会议 SketchBook：手写板 相关软件 ZOC7 注册码1234567891011121314151617181920Part A: 51698&#x2F;01027&#x2F;34713Part B: 00937Part A: 50866&#x2F;01027&#x2F;47775Part B: 57341Part A: 53866&#x2F;01028&#x2F;18861Part B: 45757Part A: 03754&#x2F;01029&#x2F;23239Part B: 50179Part A: 55834&#x2F;01027&#x2F;59600Part B: 43010Part A: 11370&#x2F;01027&#x2F;29134Part B: 51686Part A: 61298&#x2F;01028&#x2F;48550Part B: 00985","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"MacOS","slug":"OS/MacOS","permalink":"http://ioman.top/categories/OS/MacOS/"}],"tags":[]},{"title":"","slug":"OS/MacOS/ssh配置","date":"2020-08-16T01:10:19.090Z","updated":"2019-12-24T00:03:29.080Z","comments":true,"path":"2020/08/16/OS/MacOS/ssh配置/","link":"","permalink":"http://ioman.top/2020/08/16/OS/MacOS/ssh%E9%85%8D%E7%BD%AE/","excerpt":"","text":"别名登录使用 vim ~/.ssh/config命令编辑文件，添加如下内容： 123456Host Server_12HostName 192.168.200.12Port 22User rootIdentityFile ~&#x2F;.ssh&#x2F;id_rsaIdentitiesOnly yes","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"MacOS","slug":"OS/MacOS","permalink":"http://ioman.top/categories/OS/MacOS/"}],"tags":[]},{"title":"","slug":"OS/MacOS/homebrew","date":"2020-08-16T01:10:19.075Z","updated":"2019-11-30T09:57:23.547Z","comments":true,"path":"2020/08/16/OS/MacOS/homebrew/","link":"","permalink":"http://ioman.top/2020/08/16/OS/MacOS/homebrew/","excerpt":"","text":"官网安装切换源https://yq.aliyun.com/articles/634494 默认源(重置回来用) 1234567#重置brew.gitcd &quot;$(brew --repo)&quot;git remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;brew.git#重置homebrew-core.gitcd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;git remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-core.git 腾讯云 1 阿里云","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"MacOS","slug":"OS/MacOS","permalink":"http://ioman.top/categories/OS/MacOS/"}],"tags":[]},{"title":"","slug":"OS/CentOS/系统控制","date":"2020-08-16T01:10:19.059Z","updated":"2019-09-09T11:33:52.659Z","comments":true,"path":"2020/08/16/OS/CentOS/系统控制/","link":"","permalink":"http://ioman.top/2020/08/16/OS/CentOS/%E7%B3%BB%E7%BB%9F%E6%8E%A7%E5%88%B6/","excerpt":"","text":"systemctlsystemctl 是管制服务的主要工具， 它整合了chkconfig 与 service功能于一体。 123456789101112131415161718192021222324252627#查询服务是否开机启动systemctl is-enabled iptables.servicesystemctl is-enabled servicename.service #开机运行服务systemctl enable *.service #取消开机运行systemctl disable *.service #启动服务systemctl start *.service #停止服务systemctl stop *.service #重启服务systemctl restart *.service #重新加载服务配置文件systemctl reload *.service #查询服务运行状态systemctl status *.service #显示启动失败的服务systemctl --failed","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"CentOS","slug":"OS/CentOS","permalink":"http://ioman.top/categories/OS/CentOS/"}],"tags":[]},{"title":"","slug":"OS/CentOS/软件安装","date":"2020-08-16T01:10:19.059Z","updated":"2020-08-15T13:02:02.091Z","comments":true,"path":"2020/08/16/OS/CentOS/软件安装/","link":"","permalink":"http://ioman.top/2020/08/16/OS/CentOS/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/","excerpt":"","text":"企业版Linux的额外软件包(epel) yum添加epel源：yum install epel-release 安装epel后，可以用yum命令安装更多的软件包 yum 相关 安装 12345yum install eg: yum install zip unzipyum install curl curl-devel 卸载 1yum remove list 1yum list installed pip 相关 安装 12wget https:&#x2F;&#x2F;bootstrap.pypa.io&#x2F;get-pip.pypython get-pip.py 查看 1pip -V rpm 安装https://blog.csdn.net/sunkun2013/article/details/73478580 123#rpm -i example.rpm 安装 example.rpm 包；2 #rpm -iv example.rpm 安装 example.rpm 包并在安装过程中显示正在安装的文件信息；3 #rpm -ivh example.rpm 安装 example.rpm 包并在安装过程中显示正在安装的文件信息及安装进度","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"CentOS","slug":"OS/CentOS","permalink":"http://ioman.top/categories/OS/CentOS/"}],"tags":[]},{"title":"防火墙","slug":"OS/CentOS/防火墙","date":"2020-08-16T01:10:19.059Z","updated":"2020-08-16T00:55:04.098Z","comments":true,"path":"2020/08/16/OS/CentOS/防火墙/","link":"","permalink":"http://ioman.top/2020/08/16/OS/CentOS/%E9%98%B2%E7%81%AB%E5%A2%99/","excerpt":"","text":"参考https://www.cnblogs.com/moxiaoan/p/5683743.html firewalld使用启动： systemctl start firewalld关闭： systemctl stop firewalld查看状态： systemctl status firewalld开机禁用 ： systemctl disable firewalld开机启用 ： systemctl enable firewalld 查看和添加规则查看所有打开的端口： firewall-cmd –zone=public –list-ports添加：firewall-cmd –zone=public –add-port=80/tcp –permanent（–permanent永久生效，没有此参数重启后失效）重新载入：firewall-cmd –reload查看：firewall-cmd –zone= public –query-port=80/tcp删除：firewall-cmd –zone= public –remove-port=80/tcp –permanent","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"CentOS","slug":"OS/CentOS","permalink":"http://ioman.top/categories/OS/CentOS/"}],"tags":[]},{"title":"静态ip配置","slug":"OS/CentOS/静态ip配置","date":"2020-08-16T01:10:19.059Z","updated":"2020-08-16T00:55:38.388Z","comments":true,"path":"2020/08/16/OS/CentOS/静态ip配置/","link":"","permalink":"http://ioman.top/2020/08/16/OS/CentOS/%E9%9D%99%E6%80%81ip%E9%85%8D%E7%BD%AE/","excerpt":"","text":"编辑 /etc/sysconfig/network-scripts/ifcfg-eth0 12345ONBOOT=yesBOOTPROTO=staticIPADDR=192.168.xx.xx NETMASK=255.255.255.0 GATEWAY=192.168.xx.1 编辑 /etc/sysconfig/network 12DNS1=192.168.1.1DNS2=8.8.8.8 重置网络配置 1service network restart","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"CentOS","slug":"OS/CentOS","permalink":"http://ioman.top/categories/OS/CentOS/"}],"tags":[]},{"title":"","slug":"OS/All/账号和登录","date":"2020-08-16T01:10:19.059Z","updated":"2020-08-15T13:02:02.075Z","comments":true,"path":"2020/08/16/OS/All/账号和登录/","link":"","permalink":"http://ioman.top/2020/08/16/OS/All/%E8%B4%A6%E5%8F%B7%E5%92%8C%E7%99%BB%E5%BD%95/","excerpt":"","text":"密钥登录将公钥添加到 ~/.ssh/authorized_keys 文件中 登录相关配置在/etc/ssh/sshd_config中 PasswordAuthentication：账号密码登录","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"All","slug":"OS/All","permalink":"http://ioman.top/categories/OS/All/"}],"tags":[]},{"title":"压缩解压命令","slug":"OS/All/压缩解压命令","date":"2020-08-16T01:10:19.043Z","updated":"2020-08-16T00:54:26.457Z","comments":true,"path":"2020/08/16/OS/All/压缩解压命令/","link":"","permalink":"http://ioman.top/2020/08/16/OS/All/%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B%E5%91%BD%E4%BB%A4/","excerpt":"","text":".tar 解包：tar xvf FileName.tar 打包：tar cvf FileName.tar DirName .zip 解压：unzip FileName.zip 压缩文件：zip FileName.zip FileName 压缩文件夹：zip -r FileName.zip DirName .gz 解压1：gunzip FileName.gz 解压2：gzip -d FileName.gz 压缩：gzip FileName .xz 解压：xz -d 要解压的文件 压缩：xz -z 要压缩的文件 .tar.gz 和 .tgz 解压：tar zxvf FileName.tar.gz 压缩：tar zcvf FileName.tar.gz DirName .bz2 解压1：bzip2 -d FileName.bz2 解压2：bunzip2 FileName.bz2 压缩： bzip2 -z FileName .tar.bz2 解压：tar jxvf FileName.tar.bz2 压缩：tar jcvf FileName.tar.bz2 DirName .bz 解压1：bzip2 -d FileName.bz 解压2：bunzip2 FileName.bz .tar.bz 解压：tar jxvf FileName.tar.bz .Z 解压：uncompress FileName.Z 压缩：compress FileName .tar.Z 解压：tar Zxvf FileName.tar.Z 压缩：tar Zcvf FileName.tar.Z DirName .rar 解压：rar x FileName.rar 压缩：rar a FileName.rar DirName .lha 解压：lha -e FileName.lha 压缩：lha -a FileName.lha FileName .rpm 解包：rpm2cpio FileName.rpm | cpio -div","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"All","slug":"OS/All","permalink":"http://ioman.top/categories/OS/All/"}],"tags":[]},{"title":"","slug":"OS/All/挂载网络盘","date":"2020-08-16T01:10:19.043Z","updated":"2020-08-15T13:02:02.075Z","comments":true,"path":"2020/08/16/OS/All/挂载网络盘/","link":"","permalink":"http://ioman.top/2020/08/16/OS/All/%E6%8C%82%E8%BD%BD%E7%BD%91%E7%BB%9C%E7%9B%98/","excerpt":"","text":"NFS参考资料：https://www.cnblogs.com/freeweb/p/6593861.html 安装和启动服务：12345yum install nfs-utilsyum install rpcbindsystemctl start rpcbind.servicesystemctl start nfs.service 服务端配置：安装完成之后配置nfs访问目录，配置文件位置/etc/exports，默认是空的这里添加一行： 1&#x2F;nfs_test 192.168.1.8(rw,no_root_squash,no_all_squash,async) 这个配置表示开放本地存储目录/nfs_test 只允许192.168.1.8这个主机有访问权限，rw表示允许读写；no_root_squash表示root用户具有完全的管理权限；no_all_squash表示保留共享文件的UID和GID，此项是默认不写也可以；async表示数据可以先暂时在内存中，不是直接写入磁盘，可以提高性能，另外也可以配置sync表示数据直接同步到磁盘；就配置这些就可以，保存退出 如果想让另外一台主机也可以挂载这个目录，那么直接在后面追加即可，比如： 1&#x2F;nfs_test 192.168.1.8(rw,no_root_squash,no_all_squash,async) 192.168.1.9(rw,no_root_squash,no_all_squash,async) 多个目录可以每行配置一个，如果想让这个网段的主机都可以访问，假如此时子网掩码是255.255.255.0，网关是192.168.1.0，那么ip那里可以写成192.168.1.0/24表示允许地址段的所有主机访问 现在配置完这些配置，启动相关服务： 12systemctl start rpcbind.servicesystemctl start nfs.service 启动之后可以通过status来查看状态，如果下次修改了配置，可以重启服务来使配置生效，也可以直接执行如下命令刷新配置： 1exportfs -a 客户端配置：1mount -t nfs 192.168.1.241:&#x2F;media&#x2F;vpnserver &#x2F;mnt&#x2F;vpnserver SMB参考资料：https://www.myfreax.com/how-to-mount-cifs-windows-share-on-linux/ 安装1yum install cifs-utils","categories":[{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"All","slug":"OS/All","permalink":"http://ioman.top/categories/OS/All/"}],"tags":[]},{"title":"","slug":"Network/网络层/限流","date":"2020-08-16T01:10:18.980Z","updated":"2020-08-15T13:02:02.028Z","comments":true,"path":"2020/08/16/Network/网络层/限流/","link":"","permalink":"http://ioman.top/2020/08/16/Network/%E7%BD%91%E7%BB%9C%E5%B1%82/%E9%99%90%E6%B5%81/","excerpt":"","text":"说明某个服务器有大量客户端连接时，为了防止某个客户端占用大量带宽，影响其它客户端，需要服务端根据连接进行限流。 iptable限流使用iptables的hashlimit模块是一种比较推荐的方案，不需要引入额外的应用层组件。TCP和UDP模式下均测试通过。 由于CentOS 7默认使用firewalld，所以第一步要将防火墙管理软件切换回iptables： 12345# 禁用firewalldsystemctl stop firewalldsystemctl mask firewalld&#96;&#96;&#96; 安装和启用iptables yum install iptablesyum update iptablesyum install iptables-servicessystemctl enable iptablessystemctl start iptables 12清理所有防火墙规则 iptables -F 12以UDP为例，添加限流规则 添加一条限速规则iptables -A INPUT -i eth0 -p udp –dport 9194 -m hashlimit –hashlimit-name vpn_udp_limit –hashlimit-upto 100kb/s –hashlimit-mode srcip –hashlimit-burst 100kb -j ACCEPT 必须再加一条，丢掉上面规则以外的其它包iptables -A INPUT -i eth0 -p udp –dport 9194 -j DROP 12345678hashlimit的匹配方式是基于令牌桶(Token bucket)的模型，它有两个重要参数，令牌桶容量n和令牌产生速率s，hashlimit的参数说明：- hashlimit-name，名称，据说名称不能重复，否则会不生效。- hashlimit-burst，令牌桶容量。- hashlimit-upto，超过令牌桶容量后，将以这个速率限制。- hashlimit-mode，匹配项，每个匹配项拥有一个单独的令牌桶。可选参数有srcip(源ip)、dstip(目的ip)、srcport(源端口)、dstport(目的端口)。这里使用的是源ip，但在生产环境前端有负载均衡导致源ip都一样的话，可能要用源端口。配置查看和生效： iptables 规则持久化保存iptables-save &gt; /etc/sysconfig/iptables 查看规则，列出编号方便删除iptables -n -L INPUT –line-number 删除规则iptables -D INPUT [number]使用Nginx使用nginx的stream模块进行tcp或者udp转发，并配置转发时的限速规则，实现限速。 1234567### nginx限流使用nginx的stream模块进行tcp或者udp转发，并配置转发时的限速规则，实现限速。nginx的安装过程略。编辑&#x2F;etc&#x2F;nginx&#x2F;nginx.conf，可以删除其中的http相关部分，添加stream： events { worker_connections 1024;} stream { server { listen 9194; # 默认tcp，udp的话要写listen 9194 udp; proxy_responses 1; # udp要加这个参数，响应包才能回去 proxy_timeout 20s; proxy_buffer_size 512k; proxy_upload_rate 204800; # 上行速率 proxy_download_rate 204800; # 下行速率 proxy_pass 127.0.0.1:1194; # 转发位置 &#125; } 使用nginx限速，OpenVPN使用tcp协议测试通过。使用udp协议，OpenVPN用windows客户端时可以连接服务端，用linux客户端时总是连接失败，抓包分析发现，nginx的转发时，客户端每次发送的数据包都用了新的端口转发，导致服务端无法识别同一个连接，具体原因和解决办法暂未研究。","categories":[{"name":"Network","slug":"Network","permalink":"http://ioman.top/categories/Network/"},{"name":"网络层","slug":"Network/网络层","permalink":"http://ioman.top/categories/Network/%E7%BD%91%E7%BB%9C%E5%B1%82/"}],"tags":[]},{"title":"","slug":"Network/网络层/路由配置","date":"2020-08-16T01:10:18.977Z","updated":"2020-08-15T13:02:02.028Z","comments":true,"path":"2020/08/16/Network/网络层/路由配置/","link":"","permalink":"http://ioman.top/2020/08/16/Network/%E7%BD%91%E7%BB%9C%E5%B1%82/%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE/","excerpt":"","text":"","categories":[{"name":"Network","slug":"Network","permalink":"http://ioman.top/categories/Network/"},{"name":"网络层","slug":"Network/网络层","permalink":"http://ioman.top/categories/Network/%E7%BD%91%E7%BB%9C%E5%B1%82/"}],"tags":[]},{"title":"","slug":"Network/网络层/wireshark","date":"2020-08-16T01:10:18.962Z","updated":"2020-08-15T13:02:02.028Z","comments":true,"path":"2020/08/16/Network/网络层/wireshark/","link":"","permalink":"http://ioman.top/2020/08/16/Network/%E7%BD%91%E7%BB%9C%E5%B1%82/wireshark/","excerpt":"","text":"常用操作 修改协议默认端口1Edit -&gt; preferences -&gt; Protocols","categories":[{"name":"Network","slug":"Network","permalink":"http://ioman.top/categories/Network/"},{"name":"网络层","slug":"Network/网络层","permalink":"http://ioman.top/categories/Network/%E7%BD%91%E7%BB%9C%E5%B1%82/"}],"tags":[]},{"title":"抓包","slug":"Network/网络层/抓包","date":"2020-08-16T01:10:18.962Z","updated":"2020-08-16T00:53:04.789Z","comments":true,"path":"2020/08/16/Network/网络层/抓包/","link":"","permalink":"http://ioman.top/2020/08/16/Network/%E7%BD%91%E7%BB%9C%E5%B1%82/%E6%8A%93%E5%8C%85/","excerpt":"","text":"tcpdump 监听端口的udp数据包 1tcpdump -i eth0 udp port 10088 -vv -X 抓包保存成文件(下载到本地wireshark查看)1tcpdump -i eth0 -w hupan.data port 443 网卡混杂模式说明网卡正常情况下，即非混杂混杂模式下，只接收目的地址是本机的数据包。在以太网上，有大量的数据包，但真正发送给自己的非常少，所以非混杂模式下可以极大的减轻网卡的处理负担。混杂模式（Promiscuous Mode）则是相反，网卡能够接收所有经过它的数据流，而不论其目的地址是否是它他。 有时候为嗅探到网络上的数据，需要将网卡设置到混杂模式。进入该模式将网络上的数据一并抓获，为此在设置nic的混杂模式的时候有诸多方法？ 命令 设置混杂模式(设置好之后可以在ifconfig 网卡信息中看到)1ifconfig eth1 promisc 取消混杂模式1ifconfig eth1 -promisc","categories":[{"name":"Network","slug":"Network","permalink":"http://ioman.top/categories/Network/"},{"name":"网络层","slug":"Network/网络层","permalink":"http://ioman.top/categories/Network/%E7%BD%91%E7%BB%9C%E5%B1%82/"}],"tags":[]},{"title":"端口转发","slug":"Network/传输层/端口转发","date":"2020-08-16T01:10:18.962Z","updated":"2020-08-16T00:53:46.202Z","comments":true,"path":"2020/08/16/Network/传输层/端口转发/","link":"","permalink":"http://ioman.top/2020/08/16/Network/%E4%BC%A0%E8%BE%93%E5%B1%82/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/","excerpt":"","text":"端口转发工具参考： https://cikeblog.com/socat.html https://www.jianshu.com/p/435806f18406 常见的转发有rinetd、Haproxy、iptables、socat，前面2种只能转发TCP，后面TCP/UDP都可以转发。 socat 转发tcp1nohup socat TCP4-LISTEN:30000,reuseaddr,fork TCP4:1.1.1.1:30000 &gt;&gt; socat.log 2&gt;&amp;1 &amp; 转发udp1nohup socat -T 600 UDP4-LISTEN:10000,reuseaddr,fork UDP4:1.1.1.1:10000 &gt;&gt; socat.log 2&gt;&amp;1 &amp; rinetd(只支持tcp) 安装 配置1234sudo vim &#x2F;etc&#x2F;rinetd.conf&#x2F;&#x2F; 在最后添加以下配置0.0.0.0 27018 127.0.0.1 27017 &#x2F;&#x2F; 将本机27018端口转发到27017 启动端口转发进程1rinetd -c &#x2F;etc&#x2F;rinetd.conf","categories":[{"name":"Network","slug":"Network","permalink":"http://ioman.top/categories/Network/"},{"name":"传输层","slug":"Network/传输层","permalink":"http://ioman.top/categories/Network/%E4%BC%A0%E8%BE%93%E5%B1%82/"}],"tags":[]},{"title":"","slug":"Network/传输层/端口测试","date":"2020-08-16T01:10:18.962Z","updated":"2020-08-15T13:02:02.012Z","comments":true,"path":"2020/08/16/Network/传输层/端口测试/","link":"","permalink":"http://ioman.top/2020/08/16/Network/%E4%BC%A0%E8%BE%93%E5%B1%82/%E7%AB%AF%E5%8F%A3%E6%B5%8B%E8%AF%95/","excerpt":"","text":"测试TCP和UDP端口有两个命令可以用来测试端口，一个是telnet，一个是nc，但telnet只能用于测试TCP端口，而nc即可用于测试TCP端口也可用来测试UDP端口。 telnet命令的用法telnet IP port 例如： 1234567[root@localhost]# telnet 192.168.0.181 20060Trying 192.168.0.181...Connected to 192.168.0.181.Escape character is &#39;^]&#39;.quit &#x2F;&#x2F; 输入quit并回车退出telnet。 Connection closed by foreign host.[root@localhost]# nc命令的用法测试TCP端口1nc -vz IP port 例如： 123[root@localhost]# nc -vz 192.168.0.181 20060Connection to 192.168.0.181 20060 port [tcp&#x2F;*] succeeded![root@localhost]# 测试UDP端口1nc -vuz IP port","categories":[{"name":"Network","slug":"Network","permalink":"http://ioman.top/categories/Network/"},{"name":"传输层","slug":"Network/传输层","permalink":"http://ioman.top/categories/Network/%E4%BC%A0%E8%BE%93%E5%B1%82/"}],"tags":[]},{"title":"模板","slug":"Language/Shell/模板","date":"2020-08-16T01:10:18.946Z","updated":"2020-08-16T00:52:14.376Z","comments":true,"path":"2020/08/16/Language/Shell/模板/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Shell/%E6%A8%A1%E6%9D%BF/","excerpt":"","text":"基本12345678910111213141516171819202122232425262728#!/bin/bash# ifif [[ &quot;$mytemp&quot; -ge &quot;33000&quot; ]];then gpio write $MYFAN 1elif [[ &quot;$mytemp&quot; -le &quot;31000&quot; ]];then gpio write $MYFAN 0fi# forfor value in &#123;0..9&#125; do cd t-$&#123;value&#125;-1/ openvpn t-$&#123;value&#125;-1.ovpn &gt;/dev/null 2&gt;&amp;1 &amp; cd .. done# whilewhile true; do sleep 60done# valuemytemp=$(cat /sys/devices/virtual/thermal/thermal_zone0/temp)# 获取字符串长度$&#123;#str&#125;","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Shell","slug":"Language/Shell","permalink":"http://ioman.top/categories/Language/Shell/"}],"tags":[]},{"title":"","slug":"Language/Shell/判断文件是否存在","date":"2020-08-16T01:10:18.946Z","updated":"2020-08-15T13:02:01.997Z","comments":true,"path":"2020/08/16/Language/Shell/判断文件是否存在/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Shell/%E5%88%A4%E6%96%AD%E6%96%87%E4%BB%B6%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8/","excerpt":"","text":"参考https://www.cnblogs.com/sunyubo/archive/2011/10/17/2282047.html https://www.cnblogs.com/emanlee/p/3583769.html","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Shell","slug":"Language/Shell","permalink":"http://ioman.top/categories/Language/Shell/"}],"tags":[]},{"title":"","slug":"Network/传输层/TLS代理模块","date":"2020-08-16T01:10:18.946Z","updated":"2020-08-15T13:02:01.997Z","comments":true,"path":"2020/08/16/Network/传输层/TLS代理模块/","link":"","permalink":"http://ioman.top/2020/08/16/Network/%E4%BC%A0%E8%BE%93%E5%B1%82/TLS%E4%BB%A3%E7%90%86%E6%A8%A1%E5%9D%97/","excerpt":"","text":"Stunnel不支持udp…… 配置参考：https://qhh.me/2019/06/23/%E4%BD%BF%E7%94%A8-Stunnel-%E9%9A%90%E8%97%8F-OpenVPN-%E6%B5%81%E9%87%8F/ Gostmbedtls","categories":[{"name":"Network","slug":"Network","permalink":"http://ioman.top/categories/Network/"},{"name":"传输层","slug":"Network/传输层","permalink":"http://ioman.top/categories/Network/%E4%BC%A0%E8%BE%93%E5%B1%82/"}],"tags":[]},{"title":"","slug":"Network/传输层/端口查看和操作","date":"2020-08-16T01:10:18.946Z","updated":"2020-08-15T13:02:02.012Z","comments":true,"path":"2020/08/16/Network/传输层/端口查看和操作/","link":"","permalink":"http://ioman.top/2020/08/16/Network/%E4%BC%A0%E8%BE%93%E5%B1%82/%E7%AB%AF%E5%8F%A3%E6%9F%A5%E7%9C%8B%E5%92%8C%E6%93%8D%E4%BD%9C/","excerpt":"","text":"端口查看和操作 查看本地临时端口号范围(最大客户端数量) 1cat &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_local_port_range 查看服务端单进程最大文件句柄数 123456ulimit -n &#x2F;&#x2F; 修改：vim &#x2F;etc&#x2F;security&#x2F;limits.conf到最后添加* soft nofile 65536* hard nofile 65536 查看硬件文件句柄数最大限制 1cat &#x2F;proc&#x2F;sys&#x2F;fs&#x2F;file-max 查看容器中的端口映射到了哪个ip上 1iptables -L -v -n 查看本地端口的占用情况 1netstat -anp|grep 80 1lsof -i:8080","categories":[{"name":"Network","slug":"Network","permalink":"http://ioman.top/categories/Network/"},{"name":"传输层","slug":"Network/传输层","permalink":"http://ioman.top/categories/Network/%E4%BC%A0%E8%BE%93%E5%B1%82/"}],"tags":[]},{"title":"","slug":"Language/Nodejs/Npm","date":"2020-08-16T01:10:18.931Z","updated":"2020-02-29T02:02:13.176Z","comments":true,"path":"2020/08/16/Language/Nodejs/Npm/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Nodejs/Npm/","excerpt":"","text":"查看已经安装的包1npm list -g","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Nodejs","slug":"Language/Nodejs","permalink":"http://ioman.top/categories/Language/Nodejs/"}],"tags":[]},{"title":"","slug":"Language/Nodejs/安装和配置","date":"2020-08-16T01:10:18.931Z","updated":"2020-08-15T13:02:01.997Z","comments":true,"path":"2020/08/16/Language/Nodejs/安装和配置/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Nodejs/%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/","excerpt":"","text":"直接方式安装使用yum、apt-get等方式安装，安装的版本可能比较老，推荐使用在官网上下载的方式安装。 12yum install nodeyum install npm 官网下载安装在官网上下载对应的版本：https://nodejs.org/en/download/ 解压 12xz -d node-v9.3.0-linux-x64.tar.xztar -xf node-v9.3.0-linux-x64.tar 部署bin文件 方式1：添加软连接1234567ln -s &#x2F;usr&#x2F;local&#x2F;nodejs&#x2F;node-v9.3.0-linux-x64&#x2F;bin&#x2F;node &#x2F;usr&#x2F;bin&#x2F;nodeln -s &#x2F;usr&#x2F;local&#x2F;nodejs&#x2F;node-v9.3.0-linux-x64&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;bin&#x2F;npmln -s &#x2F;usr&#x2F;local&#x2F;nodejs&#x2F;node-v9.3.0-linux-x64&#x2F;bin&#x2F;npx &#x2F;usr&#x2F;bin&#x2F;npx# 后续全局安装的npm包，使用npx方式运行# npm install -g hexo-cli# npx hexo -v 方式2：在/etc/profile下添加path环境变量1export PATH&#x3D;&quot;$PATH:&#x2F;usr&#x2F;local&#x2F;node-v8.11.3-linux-x64&#x2F;bin&quot; 测试 12node -vnpm -v","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Nodejs","slug":"Language/Nodejs","permalink":"http://ioman.top/categories/Language/Nodejs/"}],"tags":[]},{"title":"","slug":"Language/Java/模板/pom","date":"2020-08-16T01:10:18.915Z","updated":"2020-02-29T02:02:29.460Z","comments":true,"path":"2020/08/16/Language/Java/模板/pom/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/%E6%A8%A1%E6%9D%BF/pom/","excerpt":"","text":"build maven 打包插件123456789101112131415161718192021222324252627&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-assembly-plugin&lt;&#x2F;artifactId&gt; &lt;configuration&gt; &lt;appendAssemblyId&gt;false&lt;&#x2F;appendAssemblyId&gt; &lt;descriptorRefs&gt; &lt;descriptorRef&gt;jar-with-dependencies&lt;&#x2F;descriptorRef&gt; &lt;&#x2F;descriptorRefs&gt; &lt;archive&gt; &lt;manifest&gt; &lt;mainClass&gt;com.hupan.home.smartgateway.SmartGatewayApplication&lt;&#x2F;mainClass&gt; &lt;&#x2F;manifest&gt; &lt;&#x2F;archive&gt; &lt;&#x2F;configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;make-assembly&lt;&#x2F;id&gt; &lt;phase&gt;package&lt;&#x2F;phase&gt; &lt;goals&gt; &lt;goal&gt;assembly&lt;&#x2F;goal&gt; &lt;&#x2F;goals&gt; &lt;&#x2F;execution&gt; &lt;&#x2F;executions&gt; &lt;&#x2F;plugin&gt; &lt;&#x2F;plugins&gt;&lt;&#x2F;build&gt; spring boot 插件12345678910111213141516171819&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt; &lt;configuration&gt; &lt;classifier&gt;boot&lt;&#x2F;classifier&gt; &lt;excludeDevtools&gt;true&lt;&#x2F;excludeDevtools&gt; &lt;&#x2F;configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;goals&gt; &lt;goal&gt;repackage&lt;&#x2F;goal&gt; &lt;&#x2F;goals&gt; &lt;&#x2F;execution&gt; &lt;&#x2F;executions&gt; &lt;&#x2F;plugin&gt; &lt;&#x2F;plugins&gt;&lt;&#x2F;build&gt; docker 插件 编译指定main文件插件","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"模板","slug":"Language/Java/模板","permalink":"http://ioman.top/categories/Language/Java/%E6%A8%A1%E6%9D%BF/"}],"tags":[]},{"title":"","slug":"Language/Java/模板/spring-pom","date":"2020-08-16T01:10:18.915Z","updated":"2020-02-29T02:02:23.840Z","comments":true,"path":"2020/08/16/Language/Java/模板/spring-pom/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/%E6%A8%A1%E6%9D%BF/spring-pom/","excerpt":"","text":"spring-boot-parentspring-boot相关的依赖依靠parent直接指定版本 12345&lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt; &lt;version&gt;2.0.6.RELEASE&lt;&#x2F;version&gt;&lt;&#x2F;parent&gt; log12345&lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;&#x2F;groupId&gt; &lt;artifactId&gt;lombok&lt;&#x2F;artifactId&gt; &lt;scope&gt;provided&lt;&#x2F;scope&gt;&lt;&#x2F;dependency&gt; test12345678910&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt; &lt;scope&gt;test&lt;&#x2F;scope&gt;&lt;&#x2F;dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.junit.jupiter&lt;&#x2F;groupId&gt; &lt;artifactId&gt;junit-jupiter-api&lt;&#x2F;artifactId&gt; &lt;scope&gt;test&lt;&#x2F;scope&gt;&lt;&#x2F;dependency&gt;","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"模板","slug":"Language/Java/模板","permalink":"http://ioman.top/categories/Language/Java/%E6%A8%A1%E6%9D%BF/"}],"tags":[]},{"title":"","slug":"Language/Java/Spring/JPA","date":"2020-08-16T01:10:18.899Z","updated":"2020-02-29T02:02:12.813Z","comments":true,"path":"2020/08/16/Language/Java/Spring/JPA/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/Spring/JPA/","excerpt":"","text":"","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"Spring","slug":"Language/Java/Spring","permalink":"http://ioman.top/categories/Language/Java/Spring/"}],"tags":[]},{"title":"","slug":"Language/Java/Web/Web","date":"2020-08-16T01:10:18.899Z","updated":"2020-02-29T02:02:19.382Z","comments":true,"path":"2020/08/16/Language/Java/Web/Web/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/Web/Web/","excerpt":"","text":"解决跨域问题123456789public void response(HttpServletResponse response, String text, String contentType) &#123; try &#123; response.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;); response.setContentType(contentType); response.getWriter().write(text); &#125; catch (IOException e) &#123; logger.error(&quot;&quot;, e); &#125; &#125;","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"Web","slug":"Language/Java/Web","permalink":"http://ioman.top/categories/Language/Java/Web/"}],"tags":[]},{"title":"","slug":"Language/Java/Maven/Json","date":"2020-08-16T01:10:18.883Z","updated":"2020-02-29T02:02:22.204Z","comments":true,"path":"2020/08/16/Language/Java/Maven/Json/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/Maven/Json/","excerpt":"","text":"fast json依赖 12&#96;&#96;&#96;demo 123### google gson依赖 com.google.code.gson gson 2.8.5 1demo 123### jackson依赖 com.fasterxml.jackson.core jackson-databind ${jackson.version} 1demo ```","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"Maven","slug":"Language/Java/Maven","permalink":"http://ioman.top/categories/Language/Java/Maven/"}],"tags":[]},{"title":"依赖管理","slug":"Language/Java/Maven/依赖管理","date":"2020-08-16T01:10:18.883Z","updated":"2020-08-16T00:45:11.545Z","comments":true,"path":"2020/08/16/Language/Java/Maven/依赖管理/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/Maven/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/","excerpt":"","text":"手动安装jar包到自己本地仓库1mvn install:install-file -Dfile&#x3D;e:&#x2F;a&#x2F;java_memcached-release_2.6.6.jar -DgroupId&#x3D;com.danga -DartifactId&#x3D;memcached -Dversion&#x3D;2.6.6 -Dpackaging&#x3D;jar -DgeneratePom&#x3D;true 依赖jar包时版本冲突的解决参考 https://blog.csdn.net/sinat_39789638/article/details/78005945 第一声明优先原则在pom.xml配置文件中，如果有两个名称相同版本不同的依赖声明，那么先写的会生效。所以，先声明自己要用的版本的jar包即可。 路径近者优先直接依赖优先于传递依赖，如果传递依赖的jar包版本冲突了，那么可以自己声明一个指定版本的依赖jar，即可解决冲突。 排出原则传递依赖冲突时，可以在不需要的jar的传递依赖中声明排除，从而解决冲突。 1234567891011&lt;dependency&gt; &lt;groupId&gt;org.apache.struts&lt;&#x2F;groupId&gt; &lt;artifactId&gt;struts2-spring-plugin&lt;&#x2F;artifactId&gt; &lt;version&gt;2.3.24&lt;&#x2F;version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.springframework&lt;&#x2F;groupId&gt; &lt;artifactId&gt;spring-beans&lt;&#x2F;artifactId&gt; &lt;&#x2F;exclusion&gt; &lt;&#x2F;exclusions&gt;&lt;&#x2F;dependency&gt; 版本锁定原则（最常使用）在配置文件pom.xml中先声明要使用哪个版本的相应jar包，声明后其他版本的jar包一律不依赖。解决了依赖冲突。 12345678910111213141516&lt;properties&gt; &lt;spring.version&gt;4.2.4.RELEASE&lt;&#x2F;spring.version&gt; &lt;hibernate.version&gt;5.0.7.Final&lt;&#x2F;hibernate.version&gt; &lt;struts.version&gt;2.3.24&lt;&#x2F;struts.version&gt;&lt;&#x2F;properties&gt;&lt;!-- 锁定版本，struts2-2.3.24、spring4.2.4、hibernate5.0.7 --&gt;&lt;dependencyManagement&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;&#x2F;groupId&gt; &lt;artifactId&gt;spring-context&lt;&#x2F;artifactId&gt; &lt;version&gt;$&#123;spring.version&#125;&lt;&#x2F;version&gt; &lt;&#x2F;dependency&gt; &lt;&#x2F;dependencies&gt;&lt;&#x2F;dependencyManagement&gt; 打包时引入本地jar包参考：https://www.jianshu.com/p/2896cba00ce1 首先在工程根目录下新建文件夹lib，之后在pom.xml中引入本地jar包，配置如下：1234567&lt;dependency&gt; &lt;groupId&gt;coupon-pojo&lt;/groupId&gt; &lt;artifactId&gt;coupon-pojo&lt;/artifactId&gt; &lt;version&gt;1.0&lt;/version&gt; &lt;scope&gt;system&lt;/scope&gt; &lt;systemPath&gt;$&#123;project.basedir&#125;/lib/coupon-pojo-1.0.jar&lt;/systemPath&gt;&lt;/dependency&gt; 其中： groupId和artifactId自定义取名，version为当前jar包版本（自定义）。 scope固定用system。 systemPath中${project.basedir}为项目根目录（建议使用此方式），coupon-pojo-1.0.jar为jar包全名称。 如项目打包成war，则在标签下的中新增如下配置：12345678910111213141516&lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;warName&gt;$&#123;project.artifactId&#125;&lt;/warName&gt; &lt;webResources&gt; &lt;resource&gt; &lt;directory&gt;lib/&lt;/directory&gt; &lt;targetPath&gt;WEB-INF/lib&lt;/targetPath&gt; &lt;includes&gt; &lt;include&gt;**/*.jar&lt;/include&gt; &lt;/includes&gt; &lt;/resource&gt; &lt;/webResources&gt; &lt;/configuration&gt;&lt;/plugin&gt; 其中： groupId和artifactId固定； warName为打包war名称（${project.artifactId}取的是pom中设置的值）； directory为工程中jar包所在路径； targetPath为打包后jar包放置的路径，同上； include为lib目录中的jar包，可配置*全部导入； 如果工程打包成jar，需要在pom.xml中添加如下配置：123456789&lt;resources&gt; &lt;resource&gt; &lt;directory&gt;lib&lt;/directory&gt; &lt;targetPath&gt;BOOT-INF/lib/&lt;/targetPath&gt; &lt;includes&gt; &lt;include&gt;**/*.jar&lt;/include&gt; &lt;/includes&gt; &lt;/resource&gt;&lt;/resources&gt; 此配置方式能否在war包中适用，暂未尝试，有待各位尝试，本文只是解决本项目中所遇到的问题，仅做参考。","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"Maven","slug":"Language/Java/Maven","permalink":"http://ioman.top/categories/Language/Java/Maven/"}],"tags":[]},{"title":"","slug":"Language/Java/Maven/安装和配置","date":"2020-08-16T01:10:18.883Z","updated":"2020-02-29T02:02:14.952Z","comments":true,"path":"2020/08/16/Language/Java/Maven/安装和配置/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/Maven/%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/","excerpt":"","text":"环境变量12export M2_HOME&#x3D;&#x2F;Users&#x2F;hupan&#x2F;program&#x2F;apache-maven-3.5.2export PATH&#x3D;$PATH:$M2_HOME&#x2F;bin 镜像源","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"Maven","slug":"Language/Java/Maven","permalink":"http://ioman.top/categories/Language/Java/Maven/"}],"tags":[]},{"title":"","slug":"Language/Java/Maven/配置和私服","date":"2020-08-16T01:10:18.883Z","updated":"2020-02-29T02:02:17.426Z","comments":true,"path":"2020/08/16/Language/Java/Maven/配置和私服/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/Maven/%E9%85%8D%E7%BD%AE%E5%92%8C%E7%A7%81%E6%9C%8D/","excerpt":"","text":"配置文件详解https://www.cnblogs.com/jingmoxukong/p/6050172.html 私服详解https://my.oschina.net/sunchp/blog/100634?p=2 超级pomhttps://www.cnblogs.com/shengulong/p/8295453.html 认证https://www.jianshu.com/p/94b060e016a2","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"Maven","slug":"Language/Java/Maven","permalink":"http://ioman.top/categories/Language/Java/Maven/"}],"tags":[]},{"title":"","slug":"Language/Java/JDK&JVM/JVM 相关","date":"2020-08-16T01:10:18.867Z","updated":"2020-02-29T02:02:16.702Z","comments":true,"path":"2020/08/16/Language/Java/JDK&JVM/JVM 相关/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/JDK&JVM/JVM%20%E7%9B%B8%E5%85%B3/","excerpt":"","text":"自带监控工具 jvisualvm MAC上的路径 /System/Library/Frameworks/JavaVM.framework/Versions/Current Java启动参数及调优参考链接 https://www.cnblogs.com/emberd/p/5973516.html","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"JDK&JVM","slug":"Language/Java/JDK-JVM","permalink":"http://ioman.top/categories/Language/Java/JDK-JVM/"}],"tags":[]},{"title":"","slug":"Language/Java/JDK&JVM/Java常见的线程安全的类","date":"2020-08-16T01:10:18.867Z","updated":"2020-02-29T02:02:30.680Z","comments":true,"path":"2020/08/16/Language/Java/JDK&JVM/Java常见的线程安全的类/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/JDK&JVM/Java%E5%B8%B8%E8%A7%81%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E7%B1%BB/","excerpt":"","text":"1. 通过synchronized 关键字给方法加上内置锁来实现线程安全Timer，TimerTask，Vector，Stack，HashTable，StringBuffer 2. 原子类Atomicxxx—包装类的线程安全类如AtomicLong，AtomicInteger等等。Atomicxxx 是通过Unsafe 类的native方法实现线程安全的。 3. BlockingQueue 和BlockingDequeBlockingDeque接口继承了BlockingQueue接口。BlockingQueue 接口的实现类有ArrayBlockingQueue ，LinkedBlockingQueue ，PriorityBlockingQueue。而BlockingDeque接口的实现类有LinkedBlockingDequeBlockingQueue和BlockingDeque 都是通过使用定义为final的ReentrantLock作为类属性显式加锁实现同步的 4. CopyOnWriteArrayList和 CopyOnWriteArraySetCopyOnWriteArraySet的内部实现是在其类内部声明一个final的CopyOnWriteArrayList属性，并在调用其构造函数时实例化该CopyOnWriteArrayList，CopyOnWriteArrayList采用的是显式地加上ReentrantLock实现同步，而CopyOnWriteArrayList容器的线程安全性在于在每次修改时都会创建并重新发布一个新的容器副本，从而实现可变性。 5. Concurrentxxx最常用的就是ConcurrentHashMap，当然还有ConcurrentSkipListSet和ConcurrentSkipListMap等等。ConcurrentHashMap使用了一种完全不同的加锁策略来提供更高的并发性和伸缩性。ConcurrentHashMap并不是将每个方法都在同一个锁上同步并使得每次只能有一个线程访问容器，而是使用一种粒度更细的加锁机制——分段锁来实现更大程度的共享。在这种机制中，任意数量的读取线程可以并发访问Map，执行读取操作的线程和执行写入操作的线程可以并发地访问Map，并且一定数量的写入线程可以并发地修改Map，这使得在并发环境下吞吐量更高，而在单线程环境中只损失非常小的性能。 6. ThreadPoolExecutorThreadPoolExecutor也是使用了ReentrantLock显式加锁同步。 7. Collections中的synchronizedCollection(Collection c)方法可将一个集合变为线程安全，其内部通过synchronized关键字加锁同步","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"JDK&JVM","slug":"Language/Java/JDK-JVM","permalink":"http://ioman.top/categories/Language/Java/JDK-JVM/"}],"tags":[]},{"title":"","slug":"Language/Java/JDK&JVM/自定义注解","date":"2020-08-16T01:10:18.867Z","updated":"2020-02-29T02:02:15.121Z","comments":true,"path":"2020/08/16/Language/Java/JDK&JVM/自定义注解/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/JDK&JVM/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3/","excerpt":"","text":"参考资料 http://www.cnblogs.com/peida/archive/2013/04/24/3036689.html https://www.jianshu.com/p/d05f9a0221d5","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"JDK&JVM","slug":"Language/Java/JDK-JVM","permalink":"http://ioman.top/categories/Language/Java/JDK-JVM/"}],"tags":[]},{"title":"","slug":"Language/Erlang/Erlang","date":"2020-08-16T01:10:18.836Z","updated":"2020-08-11T14:36:19.416Z","comments":true,"path":"2020/08/16/Language/Erlang/Erlang/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Erlang/Erlang/","excerpt":"","text":"开发环境安装(源码编译安装) 官网上下载源码 http://www.erlang.org/downloads, 下载src.tar.gz文件 解压 tar xvf otp_src_20.2.tar.gz 安装构建依赖1yum install -y which wget perl openssl-devel make automake autoconf ncurses-devel gcc 安装123cd otp_src_20.2.&#x2F;otp_build autoconf.&#x2F;configure &amp;&amp; make &amp;&amp; sudo make install 验证1erl","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Erlang","slug":"Language/Erlang","permalink":"http://ioman.top/categories/Language/Erlang/"}],"tags":[]},{"title":"","slug":"Language/Java/IDE/IDE 相关","date":"2020-08-16T01:10:18.836Z","updated":"2020-02-29T02:02:15.237Z","comments":true,"path":"2020/08/16/Language/Java/IDE/IDE 相关/","link":"","permalink":"http://ioman.top/2020/08/16/Language/Java/IDE/IDE%20%E7%9B%B8%E5%85%B3/","excerpt":"","text":"Intellij查找相关的 查找文件名 command + shift + r 查找调用关系 ctrl + option + h （菜单 navigate -&gt; Call Hierarchy）","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"IDE","slug":"Language/Java/IDE","permalink":"http://ioman.top/categories/Language/Java/IDE/"}],"tags":[]},{"title":"","slug":"Language/C&C++/Qt开发","date":"2020-08-16T01:10:18.830Z","updated":"2020-02-29T02:02:16.217Z","comments":true,"path":"2020/08/16/Language/C&C++/Qt开发/","link":"","permalink":"http://ioman.top/2020/08/16/Language/C&C++/Qt%E5%BC%80%E5%8F%91/","excerpt":"","text":"程序所有相关依赖打包 开始菜单 –&gt; Qt 5.7.0 –&gt; 5.7 –&gt; MinGW 5.3.0 (32-bit) –&gt; Qt 5.7 for Desktop (MinGW 5.3.0 32 bit) cd /d E:\\QtApp windeployqt Login.exe","categories":[{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"C&C++","slug":"Language/C-C","permalink":"http://ioman.top/categories/Language/C-C/"}],"tags":[]},{"title":"","slug":"Docker/集成-Maven","date":"2020-08-16T01:10:18.815Z","updated":"2020-08-15T13:02:01.981Z","comments":true,"path":"2020/08/16/Docker/集成-Maven/","link":"","permalink":"http://ioman.top/2020/08/16/Docker/%E9%9B%86%E6%88%90-Maven/","excerpt":"","text":"目前使用过的有docker-maven-plugin和dockerfile-maven-plugin docker-maven-plugin参考资料： https://www.jianshu.com/p/3b91b8958c3e https://github.com/spotify/docker-maven-plugin pom： 12345678910111213141516171819202122232425262728&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt; &lt;&#x2F;plugin&gt; &lt;plugin&gt; &lt;groupId&gt;com.spotify&lt;&#x2F;groupId&gt; &lt;artifactId&gt;docker-maven-plugin&lt;&#x2F;artifactId&gt; &lt;version&gt;1.2.2&lt;&#x2F;version&gt; &lt;configuration&gt; &lt;imageName&gt;$&#123;project.artifactId&#125;&lt;&#x2F;imageName&gt; &lt;forceTags&gt;true&lt;&#x2F;forceTags&gt; &lt;imageTags&gt; &lt;imageTag&gt;$&#123;project.version&#125;&lt;&#x2F;imageTag&gt; &lt;&#x2F;imageTags&gt; &lt;dockerDirectory&gt;$&#123;project.basedir&#125;&#x2F;src&#x2F;main&#x2F;docker&lt;&#x2F;dockerDirectory&gt; &lt;resources&gt; &lt;resource&gt; &lt;targetPath&gt;&#x2F;lib&lt;&#x2F;targetPath&gt; &lt;directory&gt;$&#123;project.build.directory&#125;&lt;&#x2F;directory&gt; &lt;include&gt;$&#123;project.artifactId&#125;-$&#123;project.version&#125;-boot.jar&lt;&#x2F;include&gt; &lt;&#x2F;resource&gt; &lt;&#x2F;resources&gt; &lt;&#x2F;configuration&gt; &lt;&#x2F;plugin&gt; &lt;&#x2F;plugins&gt;&lt;&#x2F;build&gt; dockerfile 1234567891011121314151617FROM base&#x2F;jre:1.0ENV CABINET_SERVER_HOME&#x3D;&quot;&#x2F;home&#x2F;cabinet&#x2F;cabinet-server&quot;ENV PATH&#x3D;&quot;$&#123;CABINET_SERVER_HOME&#125;&#x2F;bin:$&#123;PATH&#125;&quot;# utf8解决中文乱码问题ENV LANG en_US.utf8ENV LC_ALL en_US.utf8COPY bin $&#123;CABINET_SERVER_HOME&#125;&#x2F;binCOPY lib $&#123;CABINET_SERVER_HOME&#125;&#x2F;libEXPOSE 8080&#x2F;tcpWORKDIR $&#123;CABINET_SERVER_HOME&#125;ENTRYPOINT [&quot;cabinet-server&quot;] dockerfile-maven-plugin参考： https://github.com/spotify/dockerfile-maven pom: 123456789101112&lt;plugin&gt; &lt;groupId&gt;com.spotify&lt;&#x2F;groupId&gt; &lt;artifactId&gt;dockerfile-maven-plugin&lt;&#x2F;artifactId&gt; &lt;version&gt;1.4.10&lt;&#x2F;version&gt; &lt;configuration&gt; &lt;repository&gt;$&#123;docker.repository&#125;&#x2F;$&#123;project.artifactId&#125;&#x2F;$&#123;maven.run.env&#125;&lt;&#x2F;repository&gt; &lt;tag&gt;$&#123;project.version&#125;.$&#123;docker.build.number&#125;&lt;&#x2F;tag&gt; &lt;buildArgs&gt; &lt;JAR_NAME&gt;$&#123;project.build.finalName&#125;.jar&lt;&#x2F;JAR_NAME&gt; &lt;&#x2F;buildArgs&gt; &lt;&#x2F;configuration&gt;&lt;&#x2F;plugin&gt; dockerfile 1234567891011121314151617181920212223FROM centos:centos7.7.1908ARG JAR_NAMEENV MY_SERVER_HOME&#x3D;&quot;&#x2F;home&#x2F;my-server&quot;ENV PATH&#x3D;&quot;$&#123;MY_SERVER_HOME&#125;&#x2F;bin:$&#123;PATH&#125;&quot;ENV JAR_NAME&#x3D;$&#123;JAR_NAME&#125;# utf8解决中文乱码问题ENV LANG en_US.utf8ENV LC_ALL en_US.utf8# COPYCOPY target&#x2F;$&#123;JAR_NAME&#125; $&#123;MY_SERVER_HOME&#125;&#x2F;lib&#x2F;COPY src&#x2F;main&#x2F;docker&#x2F;bin $&#123;MY_SERVER_HOME&#125;&#x2F;bin# win10 下可执行权限就是加不上去，只能手动加了RUN chmod u+x $&#123;MY_SERVER_HOME&#125;&#x2F;bin&#x2F;*EXPOSE 1194&#x2F;udp 8080&#x2F;tcpWORKDIR $&#123;MY_SERVER_HOME&#125;# 使用脚本或直接java -jar启动命令ENTRYPOINT [&quot;openvpn-server-starter&quot;]","categories":[{"name":"Docker","slug":"Docker","permalink":"http://ioman.top/categories/Docker/"}],"tags":[]},{"title":"","slug":"Docker/常用服务启动","date":"2020-08-16T01:10:18.799Z","updated":"2020-08-15T13:02:01.966Z","comments":true,"path":"2020/08/16/Docker/常用服务启动/","link":"","permalink":"http://ioman.top/2020/08/16/Docker/%E5%B8%B8%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8/","excerpt":"","text":"rediskafkamysql1docker run --name some-mysql -e MYSQL_ROOT_PASSWORD&#x3D;my-secret-pw -d mysql:tag http-server1docker run -d --name http-server -p 9001:8080 -v &#x2F;media&#x2F;share&#x2F;public:&#x2F;public danjellz&#x2F;http-server:1.2 minio12345docker run -d --restart always --name minio \\-p 9000:9000 \\-e MINIO_ACCESS_KEY&#x3D;key \\-e MINIO_SECRET_KEY&#x3D;secret \\minio&#x2F;minio:RELEASE.2020-04-15T19-42-18Z server &#x2F;data","categories":[{"name":"Docker","slug":"Docker","permalink":"http://ioman.top/categories/Docker/"}],"tags":[]},{"title":"","slug":"Docker/网络","date":"2020-08-16T01:10:18.799Z","updated":"2020-02-29T02:02:16.802Z","comments":true,"path":"2020/08/16/Docker/网络/","link":"","permalink":"http://ioman.top/2020/08/16/Docker/%E7%BD%91%E7%BB%9C/","excerpt":"","text":"查看现有网络1docker network ls 查看现有的某个网络1docker network inspect bridge 创建自定义网络1docker network create --subnet&#x3D;172.18.0.0&#x2F;16 mynetwork","categories":[{"name":"Docker","slug":"Docker","permalink":"http://ioman.top/categories/Docker/"}],"tags":[]},{"title":"命令-容器","slug":"Docker/命令-容器","date":"2020-08-16T01:10:18.783Z","updated":"2020-08-16T00:42:18.952Z","comments":true,"path":"2020/08/16/Docker/命令-容器/","link":"","permalink":"http://ioman.top/2020/08/16/Docker/%E5%91%BD%E4%BB%A4-%E5%AE%B9%E5%99%A8/","excerpt":"","text":"容器 查看容器内日志1234567docker logs -f -t --since&#x3D;&quot;2017-05-31&quot; --tail&#x3D;10 capella.capella-core --since : 此参数指定了输出日志开始日期，即只输出指定日期之后的日志-f : 查看实时日志-t : 查看日志产生的日期-tail&#x3D;10 : 查看最后的10条日志。capella.capella-core : 容器名称 与容器内交互1docker exec -it postgre1 bash 新建一个容器并进入1dcoker run -it [imageid] &#x2F;bin&#x2F;bash 删除容器1docker rm -f a77e18e22b8b 将文件从容器内拷出1docker cp &lt;containerId&gt;:&#x2F;file&#x2F;path&#x2F;within&#x2F;container &#x2F;host&#x2F;path&#x2F;target 将文件拷贝到容器内1docker exec -i &lt;container_id&gt; bash -c &#39;cat &gt; &#x2F;path&#x2F;to&#x2F;container&#x2F;file&#39; &lt; &#x2F;path&#x2F;to&#x2F;host&#x2F;file&#x2F; 获取容器或者镜像的元数据123&#x2F;&#x2F; grep &#39;Env&#39; 可以看到启动时的环境变量&#x2F;&#x2F; grep &#39;Mounts&#39; 可以看到启动时的宿主机挂载文件或目录docker inspect 388fd9cfbe18 将容器打包为镜像1&#x2F;&#x2F; docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]] 运行 docker run -d 后台运行 -v 挂在宿主机的目录 docker run -it -v /test:/soft centos /bin/bash 冒号”:”前面的目录是宿主机目录，后面的目录是容器内目录 -e 添加环境变量 -p 8081:8080/tcp 将容器内的8080端口映射到宿主机8081端口上 –name 为容器取名，否则系统会自己取个名称 –ip 172.20.0.3 映射到外部宿主机端口的本地访问ip，不指定的话 iptables -L -v -n 可以查到 –entrypoint 覆盖默认的启动命令，一般加bash调试镜像启动失败的原因 最后加上要运行的镜像的id或者名称 demo: 1docker run -d -e CAPELLA_CORE_DATASOURCE&#x3D;192.168.8.158:5432&#x2F;capella -p 8081:8080&#x2F;tcp -p 1883:1883&#x2F;tcp -p 5683:5683&#x2F;udp -p 5684:5684&#x2F;udp -p 9001:9001&#x2F;tcp --name capella.capella-core capella&#x2F;capella-core:0.1.0 00bb2c816ad0","categories":[{"name":"Docker","slug":"Docker","permalink":"http://ioman.top/categories/Docker/"}],"tags":[]},{"title":"命令-构建镜像","slug":"Docker/命令-构建镜像","date":"2020-08-16T01:10:18.783Z","updated":"2020-08-16T00:42:45.942Z","comments":true,"path":"2020/08/16/Docker/命令-构建镜像/","link":"","permalink":"http://ioman.top/2020/08/16/Docker/%E5%91%BD%E4%BB%A4-%E6%9E%84%E5%BB%BA%E9%95%9C%E5%83%8F/","excerpt":"","text":"简介 Dockerfile是由一系列命令和参数构成的脚本，这些命令应用于基础镜像并最终创建一个新的镜像。 Docker 构建命令1docker build -t image-name:image-version . 构建事项设置系统字符集123456789&#x2F;&#x2F; CentOS 解决中文乱码问题ENV LANG en_US.utf8ENV LC_ALL en_US.utf8&#x2F;&#x2F; 或者 RUN localedef -i zh_CN -f UTF-8 zh_CN.UTF-8ENV LANG zh_CN.UTF-8ENV LANGUAGE zh_CN.UTF-8ENV LC_ALL zh_CN.UTF-8 Dockerfile 命令FROM 使用哪个基础镜像启动构建流程 必须是Dockerfile首个命令 镜像没有被发现，将试图从Docker image index来查找该镜像1FROM unbuntu:16.0 ADD 从源系统的文件系统上复制文件到目标容器的文件系统。 如果源是一个URL，那该URL的内容将被下载并复制到容器中。1ADD &#x2F;my_app_folder &#x2F;my_app_folder ENV 设置环境变量 以”key=value”的形式存在1ENV SERVER_WORKS 4 RUN 在容器内执行命令1RUN aptitude install -y riak CMD 执行命令，在镜像构建的容器启动的时候调用 启动容器的docker run 提供的参数相当于CMD命令1CMD &quot;echo&quot; &quot;Hello docker!&quot; ENTRYPOINT 容器启动后执行的命令，即用户的主命令 ENTRYPOINT 不可被 docker run 提供的参数覆盖 每个 Dockerfile 中只能有一个 ENTRYPOINT，当指定多个时，只有最后一个起效 如果结合CMD和ENTRYPOINT命令，可以CMD命令只写参数，参数将传递给ENTRYPOINT命令123456# 单独使用ENTRYPOINT [&quot;etcd&quot;]# 配合使用CMD &quot;Hello docker!&quot;ENTRYPOINT echo EXPOSE 用来指定端口，使容器内的应用可以通过端口和外界交互。1EXPOSE 2379 2380 WORKDIR 用于设置CMD指明的命令的运行目录。1WORKDIR ~&#x2F;","categories":[{"name":"Docker","slug":"Docker","permalink":"http://ioman.top/categories/Docker/"}],"tags":[]},{"title":"命令-镜像","slug":"Docker/命令-镜像","date":"2020-08-16T01:10:18.783Z","updated":"2020-08-16T00:43:22.811Z","comments":true,"path":"2020/08/16/Docker/命令-镜像/","link":"","permalink":"http://ioman.top/2020/08/16/Docker/%E5%91%BD%E4%BB%A4-%E9%95%9C%E5%83%8F/","excerpt":"","text":"镜像 查看本地镜像列表 1docker images 保存和展开本地镜像 12345&#x2F;&#x2F; docker savedocker save 1316871b180b -o &#x2F;root&#x2F;dockerfile&#x2F;loggermanager1.0.tar&#x2F;&#x2F; docker loaddocker load -i &#x2F;root&#x2F;dockerfile&#x2F;loggermanager1.0.tar 重命名镜像 1docker tag ced261fcbb02 capella&#x2F;etcd:3.3 删除镜像 1docker rmi 22a56c39458e 把一个正在运行的容器变成一个新镜像 1docker commit &lt;container-id&gt; &lt;image-name&gt; push到私有仓库 登录1docker login &lt;host&gt; 必须重新tag 加上私有仓库的host123docker tag &lt;img_name&gt;:&lt;tag&gt; &lt;host&gt;&#x2F;&lt;project&gt;&#x2F;&lt;repo&gt;:&lt;tag&gt;# eg. # docker tag capella-emq-builder:0.1 docker.sunseaiot.cn&#x2F;capella&#x2F;capella-emq-builder:0.1 push1docker push &lt;host&gt;&#x2F;&lt;project&gt;&#x2F;&lt;repo&gt;:&lt;tag&gt;","categories":[{"name":"Docker","slug":"Docker","permalink":"http://ioman.top/categories/Docker/"}],"tags":[]},{"title":"安装和配置","slug":"Docker/安装和配置","date":"2020-08-16T01:10:18.783Z","updated":"2020-08-16T00:42:58.152Z","comments":true,"path":"2020/08/16/Docker/安装和配置/","link":"","permalink":"http://ioman.top/2020/08/16/Docker/%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/","excerpt":"","text":"安装和启动安装docker-ce 指的是docker社区版 1yum install docker-ce 如果提示docker-ce未找到，需要添加对应的repo源。 1yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo 如果yum-config-manager命令找不到，执行： 1yum -y install yum-utils 启动守护进程1service docker start 注：关闭防火墙后，需要重启守护进程才能正常 镜像加速配置/etc/docker/daemon.json 中添加： 123&#123;&quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;]&#125; 常用国内镜像源： https://dockerhub.azk8s.cn https://hub-mirror.c.163.com https://registry.docker-cn.com 阿里云镜像加速需要账号登录后才能查看：https://cr.console.aliyun.com/#/accelerator 现在一些镜像加速貌似都不管用了，可以用curl测试 1curl -v https:&#x2F;&#x2F;registry.docker-cn.com 修改完地址后，重新加载配置文件，重启docker服务 12systemctl daemon-reloadsystemctl restart docker 也可以直接用对应的镜像地址下载 1docker pull hub.c.163.com&#x2F;library&#x2F;tomcat:latest 配置文件 位于 /etc/docker/, daemon.json, key.json 修改镜像源, 例如daemon.json 中加入1&quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;], 允许远程访问docker( docker -H ${host} ) (不安全), 例如1234567891011# linux : daemon.json 中加入&quot;hosts&quot;: [ &quot;tcp:&#x2F;&#x2F;0.0.0.0:2375&quot;, &quot;unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock&quot;],# 或者vim &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.serviceExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H tcp:&#x2F;&#x2F;0.0.0.0:2375 -H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock# windows: Settings -&gt; General 添加环境变量：DOCKER_HOST=tcp://x.x.x.x:2375, 可以直接代替docker -H Windows系统下和虚拟机共存问题","categories":[{"name":"Docker","slug":"Docker","permalink":"http://ioman.top/categories/Docker/"}],"tags":[]},{"title":"","slug":"Docker/容器编排","date":"2020-08-16T01:10:18.783Z","updated":"2020-02-29T02:02:20.537Z","comments":true,"path":"2020/08/16/Docker/容器编排/","link":"","permalink":"http://ioman.top/2020/08/16/Docker/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/","excerpt":"","text":"参考：https://www.jianshu.com/p/658911a8cff3 安装 github安装 12sudo curl -L https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.21.2&#x2F;docker-compose-$(uname -s)-$(uname -m) -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-composesudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose pip安装 1sudo pip install docker-compose 查看安装成功 1docker-compose -v","categories":[{"name":"Docker","slug":"Docker","permalink":"http://ioman.top/categories/Docker/"}],"tags":[]},{"title":"首页","slug":"首页","date":"2020-08-08T14:00:53.877Z","updated":"2020-08-11T14:58:26.247Z","comments":true,"path":"2020/08/08/首页/","link":"","permalink":"http://ioman.top/2020/08/08/%E9%A6%96%E9%A1%B5/","excerpt":"","text":"工作以后，一直用有道云笔记，记录技术问题的解决方法、软件安装和使用、常用操作命令等，逐步积累和完善。但云笔记不太方便分享，所以同步到这里，方便自己查看，也共享给遇到相似问题的人作为参考。 主要内容包括： 操作系统常用命令和设置。 常用中间件、软件模块的安装和配置。 编程语言、框架相关知识。 网络通信协议、安全加密。 笔记大部分内容也是来源于网络，经过思考和实践，以自己需要的格式重新整理。 笔记是人的“外脑”，知识库也是不断更新的，添加新知识，清除过期内容，修正错误。 我觉得知识库并不是内容越多越好，而是要内容精准，满足自己的需求，下次遇到同样问题时，减轻大脑的记忆负担，节省检索的时间和试错的工作量。","categories":[],"tags":[]}],"categories":[{"name":"Database","slug":"Database","permalink":"http://ioman.top/categories/Database/"},{"name":"本地缓存","slug":"Database/本地缓存","permalink":"http://ioman.top/categories/Database/%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98/"},{"name":"基础知识","slug":"Database/基础知识","permalink":"http://ioman.top/categories/Database/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"name":"Redis","slug":"Database/Redis","permalink":"http://ioman.top/categories/Database/Redis/"},{"name":"Postgre","slug":"Database/Postgre","permalink":"http://ioman.top/categories/Database/Postgre/"},{"name":"MySQL","slug":"Database/MySQL","permalink":"http://ioman.top/categories/Database/MySQL/"},{"name":"MongoDB","slug":"Database/MongoDB","permalink":"http://ioman.top/categories/Database/MongoDB/"},{"name":"HBase","slug":"Database/HBase","permalink":"http://ioman.top/categories/Database/HBase/"},{"name":"Cassandra","slug":"Database/Cassandra","permalink":"http://ioman.top/categories/Database/Cassandra/"},{"name":"硬件","slug":"硬件","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/"},{"name":"蜂窝模组","slug":"硬件/蜂窝模组","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E8%9C%82%E7%AA%9D%E6%A8%A1%E7%BB%84/"},{"name":"树莓派","slug":"硬件/树莓派","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"应用","slug":"硬件/树莓派/应用","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E6%A0%91%E8%8E%93%E6%B4%BE/%E5%BA%94%E7%94%A8/"},{"name":"天猫精灵","slug":"硬件/天猫精灵","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/%E5%A4%A9%E7%8C%AB%E7%B2%BE%E7%81%B5/"},{"name":"NanoPi","slug":"硬件/NanoPi","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/NanoPi/"},{"name":"ESP8266","slug":"硬件/ESP8266","permalink":"http://ioman.top/categories/%E7%A1%AC%E4%BB%B6/ESP8266/"},{"name":"协议","slug":"协议","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/"},{"name":"SIP","slug":"协议/SIP","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/SIP/"},{"name":"MQTT","slug":"协议/MQTT","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/MQTT/"},{"name":"HTTP","slug":"协议/HTTP","permalink":"http://ioman.top/categories/%E5%8D%8F%E8%AE%AE/HTTP/"},{"name":"软件模块","slug":"软件模块","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/"},{"name":"应用软件","slug":"软件模块/应用软件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6/"},{"name":"办公","slug":"软件模块/办公","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E5%8A%9E%E5%85%AC/"},{"name":"中间件","slug":"软件模块/中间件","permalink":"http://ioman.top/categories/%E8%BD%AF%E4%BB%B6%E6%A8%A1%E5%9D%97/%E4%B8%AD%E9%97%B4%E4%BB%B6/"},{"name":"测试工具","slug":"测试工具","permalink":"http://ioman.top/categories/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"},{"name":"JMeter","slug":"测试工具/JMeter","permalink":"http://ioman.top/categories/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/JMeter/"},{"name":"版本管理","slug":"版本管理","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"},{"name":"git","slug":"版本管理/git","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/"},{"name":"svn","slug":"版本管理/svn","permalink":"http://ioman.top/categories/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/svn/"},{"name":"安全加密","slug":"安全加密","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/"},{"name":"证书工具","slug":"安全加密/证书工具","permalink":"http://ioman.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86/%E8%AF%81%E4%B9%A6%E5%B7%A5%E5%85%B7/"},{"name":"OS","slug":"OS","permalink":"http://ioman.top/categories/OS/"},{"name":"Windows","slug":"OS/Windows","permalink":"http://ioman.top/categories/OS/Windows/"},{"name":"Ubuntu","slug":"OS/Ubuntu","permalink":"http://ioman.top/categories/OS/Ubuntu/"},{"name":"OpenWRT","slug":"OS/OpenWRT","permalink":"http://ioman.top/categories/OS/OpenWRT/"},{"name":"MacOS","slug":"OS/MacOS","permalink":"http://ioman.top/categories/OS/MacOS/"},{"name":"CentOS","slug":"OS/CentOS","permalink":"http://ioman.top/categories/OS/CentOS/"},{"name":"All","slug":"OS/All","permalink":"http://ioman.top/categories/OS/All/"},{"name":"Network","slug":"Network","permalink":"http://ioman.top/categories/Network/"},{"name":"网络层","slug":"Network/网络层","permalink":"http://ioman.top/categories/Network/%E7%BD%91%E7%BB%9C%E5%B1%82/"},{"name":"传输层","slug":"Network/传输层","permalink":"http://ioman.top/categories/Network/%E4%BC%A0%E8%BE%93%E5%B1%82/"},{"name":"Language","slug":"Language","permalink":"http://ioman.top/categories/Language/"},{"name":"Shell","slug":"Language/Shell","permalink":"http://ioman.top/categories/Language/Shell/"},{"name":"Nodejs","slug":"Language/Nodejs","permalink":"http://ioman.top/categories/Language/Nodejs/"},{"name":"Java","slug":"Language/Java","permalink":"http://ioman.top/categories/Language/Java/"},{"name":"模板","slug":"Language/Java/模板","permalink":"http://ioman.top/categories/Language/Java/%E6%A8%A1%E6%9D%BF/"},{"name":"Spring","slug":"Language/Java/Spring","permalink":"http://ioman.top/categories/Language/Java/Spring/"},{"name":"Web","slug":"Language/Java/Web","permalink":"http://ioman.top/categories/Language/Java/Web/"},{"name":"Maven","slug":"Language/Java/Maven","permalink":"http://ioman.top/categories/Language/Java/Maven/"},{"name":"JDK&JVM","slug":"Language/Java/JDK-JVM","permalink":"http://ioman.top/categories/Language/Java/JDK-JVM/"},{"name":"Erlang","slug":"Language/Erlang","permalink":"http://ioman.top/categories/Language/Erlang/"},{"name":"IDE","slug":"Language/Java/IDE","permalink":"http://ioman.top/categories/Language/Java/IDE/"},{"name":"C&C++","slug":"Language/C-C","permalink":"http://ioman.top/categories/Language/C-C/"},{"name":"Docker","slug":"Docker","permalink":"http://ioman.top/categories/Docker/"}],"tags":[]}